<?xml version="1.0" encoding="UTF-8" standalone="no" ?>
<graph_file xmlns="adtf/xsd/graph">
  <file_version>
    <major>1</major>
    <minor>0</minor>
  </file_version>
  <name>default_graph</name>
  <graphs>
    <graph>
      <name>default_filter_graph</name>
      <filters>
        <filter>
          <name>EmergencyBrake</name>
          <class_id>emergency_brake.filter.user.aadc.cid</class_id>
          <input_pins>
            <pin>
              <name>laserScanner</name>
            </pin>
            <pin>
              <name>in_steeringAngle</name>
            </pin>
          </input_pins>
          <output_pins>
            <pin>
              <name>output</name>
            </pin>
          </output_pins>
          <runners/>
          <init_priority>0</init_priority>
          <binding_servers/>
          <binding_clients/>
        </filter>
        <filter>
          <name>Obstacle Map</name>
          <class_id>demo_qt_video_display.ui_filter.adtf.cid</class_id>
          <input_pins>
            <pin>
              <name>video</name>
            </pin>
          </input_pins>
          <output_pins/>
          <runners/>
          <init_priority>0</init_priority>
          <deactivated>false</deactivated>
          <binding_servers/>
          <binding_clients/>
        </filter>
        <filter>
          <name>Marker Positioning</name>
          <class_id>marker_positioning.filter.base.aadc.cid</class_id>
          <input_pins>
            <pin>
              <name>road_sign_ext</name>
            </pin>
            <pin>
              <name>speed</name>
            </pin>
            <pin>
              <name>imu</name>
            </pin>
            <pin>
              <name>road_sign_map</name>
            </pin>
          </input_pins>
          <output_pins>
            <pin>
              <name>position</name>
            </pin>
          </output_pins>
          <runners/>
          <init_priority>0</init_priority>
          <binding_servers/>
          <binding_clients/>
        </filter>
        <filter>
          <name>EnvironmentalModel</name>
          <class_id>environmental_model.filter.user.aadc.cid</class_id>
          <input_pins>
            <pin>
              <name>Position</name>
            </pin>
            <pin>
              <name>USSideRight</name>
            </pin>
            <pin>
              <name>USSideLeft</name>
            </pin>
            <pin>
              <name>USRearRight</name>
            </pin>
            <pin>
              <name>USRearCenter</name>
            </pin>
            <pin>
              <name>USRearLeft</name>
            </pin>
            <pin>
              <name>TotalDistance</name>
            </pin>
            <pin>
              <name>laserScanner</name>
            </pin>
            <pin>
              <name>RelativeLanePositioning</name>
            </pin>
            <pin>
              <name>in_opendrive_map</name>
            </pin>
            <pin>
              <name>in_trafficsign_map</name>
            </pin>
            <pin>
              <name>ZebraDetection</name>
            </pin>
            <pin>
              <name>lanes</name>
            </pin>
            <pin>
              <name>EmergencyBrakeSignal</name>
            </pin>
          </input_pins>
          <output_pins>
            <pin>
              <name>output</name>
            </pin>
            <pin>
              <name>egoStateStruct</name>
            </pin>
            <pin>
              <name>openDriveMapAnalyzerInstanceSynchronization</name>
            </pin>
          </output_pins>
          <runners/>
          <init_priority>0</init_priority>
          <binding_servers/>
          <binding_clients/>
        </filter>
        <filter>
          <name>Map Visualization</name>
          <class_id>map_visualization.filter.user.aadc.cid</class_id>
          <input_pins>
            <pin>
              <name>position</name>
            </pin>
            <pin>
              <name>OpenDriveMapAnalyzerInstanceSynchronization</name>
            </pin>
          </input_pins>
          <output_pins/>
          <runners/>
          <init_priority>0</init_priority>
          <binding_servers/>
          <binding_clients/>
        </filter>
      </filters>
      <subgraphs>
        <subgraph>
          <name>Camera Handling</name>
          <graph>camera_handling</graph>
          <init_priority>0</init_priority>
        </subgraph>
        <subgraph>
          <name>Sensor Sanitization</name>
          <graph>sensor_sanitization</graph>
          <init_priority>0</init_priority>
        </subgraph>
      </subgraphs>
      <input_data_ports>
        <data_port>
          <name>em_odmap</name>
        </data_port>
        <data_port>
          <name>em_tsmap</name>
        </data_port>
        <data_port>
          <name>steering_in</name>
        </data_port>
      </input_data_ports>
      <output_data_ports>
        <data_port>
          <name>emergency_break</name>
        </data_port>
        <data_port>
          <name>measured_vehicle_speed</name>
        </data_port>
        <data_port>
          <name>envmodel_out_ego_state</name>
        </data_port>
        <data_port>
          <name>envModel_out_openDriveMapAnalyzerInstanceSynchronization</name>
        </data_port>
      </output_data_ports>
      <input_interface_ports/>
      <output_interface_ports/>
      <output_runner_ports/>
      <input_runner_ports/>
      <streaming_in_ports/>
      <streaming_out_ports/>
      <sample_streams>
        <sample_stream>
          <name>emergency_break_output_stream</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>Sanitized Lidar</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>Side Right</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>Rear Right</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>Rear Center</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>Rear Left</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>Side Left</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>LaneCenterSplitStream</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>measuredSpeedStream</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>distance_overall</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>stream_obstacle_map</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>stream_road_sign_ext</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>stream_imu</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>stream_position</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>stream_envmodel_out_egostate</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>stream_em_odmap</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>stream_em_tsmap</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>stream_openDriveMapAnalyzerInstanceSynchronization</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>stream_steering_in</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>stream_zebra_detection_detected</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>stream_lanes_from_lanedet_to_envmodel</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
      </sample_streams>
      <active_runners/>
      <binding_proxys/>
      <connections>
        <connection>
          <name>EmergencyBrake.output_emergency_break_output_stream.</name>
          <source_connector_path>
            <connector>output</connector>
            <component>EmergencyBrake</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>emergency_break_output_stream</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Sample Stream._EmergencyBrake.laserScanner</name>
          <source_connector_path>
            <connector/>
            <component>Sanitized Lidar</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>laserScanner</connector>
            <component>EmergencyBrake</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Camera Handling.lane_center_split_LaneCenterSplitStream.</name>
          <source_connector_path>
            <connector>lane_center_split</connector>
            <component>Camera Handling</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>LaneCenterSplitStream</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Map_Stream._Map.video</name>
          <source_connector_path>
            <connector/>
            <component>stream_obstacle_map</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>video</connector>
            <component>Obstacle Map</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <deactivated>false</deactivated>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Sensor Sanitization.sanitized_us_sideright_Side Right.</name>
          <source_connector_path>
            <connector>sanitized_us_sideright</connector>
            <component>Sensor Sanitization</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>Side Right</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Sensor Sanitization.sanitized_us_sideleft_Side Left.</name>
          <source_connector_path>
            <connector>sanitized_us_sideleft</connector>
            <component>Sensor Sanitization</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>Side Left</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Sensor Sanitization.sanitized_us_rearright_Rear Right.</name>
          <source_connector_path>
            <connector>sanitized_us_rearright</connector>
            <component>Sensor Sanitization</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>Rear Right</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Sensor Sanitization.sanitized_us_rearcenter_Rear Center.</name>
          <source_connector_path>
            <connector>sanitized_us_rearcenter</connector>
            <component>Sensor Sanitization</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>Rear Center</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Sensor Sanitization.sanitized_us_rearleft_Rear Left.</name>
          <source_connector_path>
            <connector>sanitized_us_rearleft</connector>
            <component>Sensor Sanitization</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>Rear Left</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Sensor Sanitization.vehicle_speed_measuredSpeedStream.</name>
          <source_connector_path>
            <connector>vehicle_speed</connector>
            <component>Sensor Sanitization</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>measuredSpeedStream</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Sensor Sanitization.distance_overall_distance_overall.</name>
          <source_connector_path>
            <connector>distance_overall</connector>
            <component>Sensor Sanitization</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>distance_overall</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Sensor Sanitization.sanitized_laser_scanner_Sanitized Lidar.</name>
          <source_connector_path>
            <connector>sanitized_laser_scanner</connector>
            <component>Sensor Sanitization</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>Sanitized Lidar</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Camera Handling.road_sign_ext_stream_road_sign_ext.</name>
          <source_connector_path>
            <connector>road_sign_ext</connector>
            <component>Camera Handling</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>stream_road_sign_ext</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>stream_road_sign_ext._Marker Positioning.road_sign_ext</name>
          <source_connector_path>
            <connector/>
            <component>stream_road_sign_ext</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>road_sign_ext</connector>
            <component>Marker Positioning</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>measuredSpeedStream._Marker Positioning.speed</name>
          <source_connector_path>
            <connector/>
            <component>measuredSpeedStream</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>speed</connector>
            <component>Marker Positioning</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Sensor Sanitization.imu_stream_imu.</name>
          <source_connector_path>
            <connector>imu</connector>
            <component>Sensor Sanitization</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>stream_imu</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>stream_imu._Marker Positioning.imu</name>
          <source_connector_path>
            <connector/>
            <component>stream_imu</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>imu</connector>
            <component>Marker Positioning</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>emergency_break_output_stream._emergency_break.</name>
          <source_connector_path>
            <connector/>
            <component>emergency_break_output_stream</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>emergency_break</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>measuredSpeedStream._measured_vehicle_speed.</name>
          <source_connector_path>
            <connector/>
            <component>measuredSpeedStream</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>measured_vehicle_speed</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Marker Positioning.position_stream_position.</name>
          <source_connector_path>
            <connector>position</connector>
            <component>Marker Positioning</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>stream_position</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>stream_position._EnvironmentalModel.Position</name>
          <source_connector_path>
            <connector/>
            <component>stream_position</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>Position</connector>
            <component>EnvironmentalModel</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Side Right._EnvironmentalModel.USSideRight</name>
          <source_connector_path>
            <connector/>
            <component>Side Right</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>USSideRight</connector>
            <component>EnvironmentalModel</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Side Left._EnvironmentalModel.USSideLeft</name>
          <source_connector_path>
            <connector/>
            <component>Side Left</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>USSideLeft</connector>
            <component>EnvironmentalModel</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Rear Right._EnvironmentalModel.USRearRight</name>
          <source_connector_path>
            <connector/>
            <component>Rear Right</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>USRearRight</connector>
            <component>EnvironmentalModel</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Rear Center._EnvironmentalModel.USRearCenter</name>
          <source_connector_path>
            <connector/>
            <component>Rear Center</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>USRearCenter</connector>
            <component>EnvironmentalModel</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Rear Left._EnvironmentalModel.USRearLeft</name>
          <source_connector_path>
            <connector/>
            <component>Rear Left</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>USRearLeft</connector>
            <component>EnvironmentalModel</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>LaneCenterSplitStream._EnvironmentalModel.RelativeLanePositioning</name>
          <source_connector_path>
            <connector/>
            <component>LaneCenterSplitStream</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>RelativeLanePositioning</connector>
            <component>EnvironmentalModel</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>distance_overall._EnvironmentalModel.TotalDistance</name>
          <source_connector_path>
            <connector/>
            <component>distance_overall</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>TotalDistance</connector>
            <component>EnvironmentalModel</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Sanitized Lidar._EnvironmentalModel.laserScanner</name>
          <source_connector_path>
            <connector/>
            <component>Sanitized Lidar</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>laserScanner</connector>
            <component>EnvironmentalModel</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>EnvironmentalModel.output_stream_obstacle_map.</name>
          <source_connector_path>
            <connector>output</connector>
            <component>EnvironmentalModel</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>stream_obstacle_map</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>stream_envmodel_out_egostate._envmodel_out_ego_state.</name>
          <source_connector_path>
            <connector/>
            <component>stream_envmodel_out_egostate</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>envmodel_out_ego_state</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>EnvironmentalModel.egoStateStruct_stream_envmodel_out_egostate.</name>
          <source_connector_path>
            <connector>egoStateStruct</connector>
            <component>EnvironmentalModel</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>stream_envmodel_out_egostate</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>stream_em_odmap._EnvironmentalModel.in_opendrive_map</name>
          <source_connector_path>
            <connector/>
            <component>stream_em_odmap</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>in_opendrive_map</connector>
            <component>EnvironmentalModel</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>em_odmap._stream_em_odmap.</name>
          <source_connector_path>
            <connector/>
            <component>em_odmap</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>stream_em_odmap</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>stream_em_tsmap._EnvironmentalModel.in_trafficsign_map</name>
          <source_connector_path>
            <connector/>
            <component>stream_em_tsmap</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>in_trafficsign_map</connector>
            <component>EnvironmentalModel</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>em_tsmap._stream_em_tsmap.</name>
          <source_connector_path>
            <connector/>
            <component>em_tsmap</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>stream_em_tsmap</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>stream_em_tsmap._Marker Positioning.road_sign_map</name>
          <source_connector_path>
            <connector/>
            <component>stream_em_tsmap</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>road_sign_map</connector>
            <component>Marker Positioning</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>stream_position._Map Visualization.position</name>
          <source_connector_path>
            <connector/>
            <component>stream_position</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>position</connector>
            <component>Map Visualization</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>EnvironmentalModel.openDriveMapAnalyzerInstanceSynchronization_stream_openDriveMapAnalyzerInstanceSynchronization.</name>
          <source_connector_path>
            <connector>openDriveMapAnalyzerInstanceSynchronization</connector>
            <component>EnvironmentalModel</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>stream_openDriveMapAnalyzerInstanceSynchronization</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>stream_openDriveMapAnalyzerInstanceSynchronization._envModel_out_openDriveMapAnalyzerInstanceSynchronization.</name>
          <source_connector_path>
            <connector/>
            <component>stream_openDriveMapAnalyzerInstanceSynchronization</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>envModel_out_openDriveMapAnalyzerInstanceSynchronization</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>stream_openDriveMapAnalyzerInstanceSynchronization._Map Visualization.OpenDriveMapAnalyzerInstanceSynchronization</name>
          <source_connector_path>
            <connector/>
            <component>stream_openDriveMapAnalyzerInstanceSynchronization</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>OpenDriveMapAnalyzerInstanceSynchronization</connector>
            <component>Map Visualization</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>steering_in._stream_steering_in.</name>
          <source_connector_path>
            <connector/>
            <component>steering_in</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>stream_steering_in</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>stream_steering_in._EmergencyBrake.in_steeringAngle</name>
          <source_connector_path>
            <connector/>
            <component>stream_steering_in</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>in_steeringAngle</connector>
            <component>EmergencyBrake</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>false</sync>
        </connection>
        <connection>
          <name>stream_steering_in._Camera Handling.current_steering</name>
          <source_connector_path>
            <connector/>
            <component>stream_steering_in</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>current_steering</connector>
            <component>Camera Handling</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Camera Handling.zebra_detected_stream_zebra_detection_detected.</name>
          <source_connector_path>
            <connector>zebra_detected</connector>
            <component>Camera Handling</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>stream_zebra_detection_detected</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>stream_zebra_detection_detected._EnvironmentalModel.ZebraDetection</name>
          <source_connector_path>
            <connector/>
            <component>stream_zebra_detection_detected</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>ZebraDetection</connector>
            <component>EnvironmentalModel</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>stream_envmodel_out_egostate._Camera Handling.egostate_in</name>
          <source_connector_path>
            <connector/>
            <component>stream_envmodel_out_egostate</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>egostate_in</connector>
            <component>Camera Handling</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Camera Handling.lanes_from_landedet_stream_lanes_from_lanedet_to_envmodel.</name>
          <source_connector_path>
            <connector>lanes_from_landedet</connector>
            <component>Camera Handling</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>stream_lanes_from_lanedet_to_envmodel</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>stream_lanes_from_lanedet_to_envmodel._EnvironmentalModel.lanes</name>
          <source_connector_path>
            <connector/>
            <component>stream_lanes_from_lanedet_to_envmodel</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>lanes</connector>
            <component>EnvironmentalModel</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>emergency_break_output_stream._EnvironmentalModel.EmergencyBrakeSignal</name>
          <source_connector_path>
            <connector/>
            <component>emergency_break_output_stream</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>EmergencyBrakeSignal</connector>
            <component>EnvironmentalModel</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
      </connections>
      <streaming_interface_in_ports/>
      <streaming_interface_out_ports/>
    </graph>
    <graph>
      <name>devel_filter_graph</name>
      <filters>
        <filter>
          <name>MissionController</name>
          <class_id>fc_mission_controller.filter.user.aadc.cid</class_id>
          <input_pins>
            <pin>
              <name>in_jurystruct</name>
            </pin>
            <pin>
              <name>in_maneuver_list</name>
            </pin>
            <pin>
              <name>OpenDriveMapAnalyzerInstanceSynchronization</name>
            </pin>
          </input_pins>
          <output_pins>
            <pin>
              <name>out_driverstate</name>
            </pin>
          </output_pins>
          <runners/>
          <init_priority>0</init_priority>
          <binding_servers/>
          <binding_clients/>
        </filter>
      </filters>
      <subgraphs>
        <subgraph>
          <name>jury_Module</name>
          <graph>jury_interaction</graph>
          <init_priority>0</init_priority>
        </subgraph>
      </subgraphs>
      <input_data_ports/>
      <output_data_ports/>
      <input_interface_ports/>
      <output_interface_ports/>
      <output_runner_ports/>
      <input_runner_ports/>
      <streaming_in_ports/>
      <streaming_out_ports/>
      <sample_streams>
        <sample_stream>
          <name>driverstate</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>jurystruct</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>maneuverlist</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>odmap</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
      </sample_streams>
      <active_runners/>
      <binding_proxys/>
      <connections>
        <connection>
          <name>MissionController.out_driverstate_driverstate.</name>
          <source_connector_path>
            <connector>out_driverstate</connector>
            <component>MissionController</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>driverstate</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>driverstate._jury_Module.jm_driver_state</name>
          <source_connector_path>
            <connector/>
            <component>driverstate</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>jm_driver_state</connector>
            <component>jury_Module</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>jury_Module.jm_jury_struct_jurystruct.</name>
          <source_connector_path>
            <connector>jm_jury_struct</connector>
            <component>jury_Module</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>jurystruct</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>jurystruct._MissionController.in_jurystruct</name>
          <source_connector_path>
            <connector/>
            <component>jurystruct</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>in_jurystruct</connector>
            <component>MissionController</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>jury_Module.jm_maneuver_list_maneuverlist.</name>
          <source_connector_path>
            <connector>jm_maneuver_list</connector>
            <component>jury_Module</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>maneuverlist</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>maneuverlist._MissionController.in_maneuver_list</name>
          <source_connector_path>
            <connector/>
            <component>maneuverlist</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>in_maneuver_list</connector>
            <component>MissionController</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>jury_Module.jm_odmap_odmap.</name>
          <source_connector_path>
            <connector>jm_odmap</connector>
            <component>jury_Module</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>odmap</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>odmap._MissionController.OpenDriveMapAnalyzerInstanceSynchronization</name>
          <source_connector_path>
            <connector/>
            <component>odmap</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>OpenDriveMapAnalyzerInstanceSynchronization</connector>
            <component>MissionController</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
      </connections>
      <streaming_interface_in_ports/>
      <streaming_interface_out_ports/>
    </graph>
    <graph>
      <name>camera_handling</name>
      <filters>
        <filter>
          <name>Fisheye Undistortion</name>
          <class_id>fisheye_undistortion.filter.demo.aadc.cid</class_id>
          <input_pins>
            <pin>
              <name>input</name>
            </pin>
          </input_pins>
          <output_pins>
            <pin>
              <name>output</name>
            </pin>
          </output_pins>
          <runners/>
          <init_priority>0</init_priority>
          <deactivated>false</deactivated>
          <binding_servers/>
          <binding_clients/>
        </filter>
        <filter>
          <name>Marker Detector</name>
          <class_id>marker_detector.filter.demo.aadc.cid</class_id>
          <input_pins>
            <pin>
              <name>input</name>
            </pin>
          </input_pins>
          <output_pins>
            <pin>
              <name>output</name>
            </pin>
            <pin>
              <name>road_sign_ext</name>
            </pin>
          </output_pins>
          <runners/>
          <init_priority>0</init_priority>
          <deactivated>false</deactivated>
          <binding_servers/>
          <binding_clients/>
        </filter>
        <filter>
          <name>Birds Eye Transform</name>
          <class_id>birds_eye_transform.filter.user.aadc.cid</class_id>
          <input_pins>
            <pin>
              <name>in</name>
            </pin>
          </input_pins>
          <output_pins>
            <pin>
              <name>out</name>
            </pin>
          </output_pins>
          <runners/>
          <init_priority>0</init_priority>
          <deactivated>false</deactivated>
          <binding_servers/>
          <binding_clients/>
        </filter>
        <filter>
          <name>Lane Detection</name>
          <class_id>lane_detection.filter.user.aadc.cid</class_id>
          <input_pins>
            <pin>
              <name>in</name>
            </pin>
            <pin>
              <name>SteeringIn</name>
            </pin>
            <pin>
              <name>EgoState_in</name>
            </pin>
          </input_pins>
          <output_pins>
            <pin>
              <name>out</name>
            </pin>
            <pin>
              <name>LaneCenterSplit</name>
            </pin>
            <pin>
              <name>ZebraCrossing</name>
            </pin>
            <pin>
              <name>lanes</name>
            </pin>
            <pin>
              <name>debug_out</name>
            </pin>
          </output_pins>
          <runners/>
          <init_priority>0</init_priority>
          <deactivated>false</deactivated>
          <binding_servers/>
          <binding_clients/>
        </filter>
        <filter>
          <name>Object Detection Filter YOLO</name>
          <class_id>object_detection_filter_yolos.filter.user.aadc.cid</class_id>
          <input_pins>
            <pin>
              <name>in</name>
            </pin>
            <pin>
              <name>EgoState</name>
            </pin>
          </input_pins>
          <output_pins>
            <pin>
              <name>out</name>
            </pin>
          </output_pins>
          <runners>
            <runner>
              <name>trigger</name>
            </runner>
          </runners>
          <init_priority>0</init_priority>
          <deactivated>false</deactivated>
          <binding_servers/>
          <binding_clients/>
        </filter>
        <filter>
          <name>LaneDetectionDebug</name>
          <class_id>demo_qt_video_display.ui_filter.adtf.cid</class_id>
          <input_pins>
            <pin>
              <name>video</name>
            </pin>
          </input_pins>
          <output_pins/>
          <runners/>
          <init_priority>0</init_priority>
          <binding_servers/>
          <binding_clients/>
        </filter>
      </filters>
      <subgraphs>
        <subgraph>
          <name>Camera Visualization</name>
          <graph>camera_visualization</graph>
          <init_priority>0</init_priority>
        </subgraph>
      </subgraphs>
      <input_data_ports>
        <data_port>
          <name>current_steering</name>
        </data_port>
        <data_port>
          <name>egostate_in</name>
        </data_port>
      </input_data_ports>
      <output_data_ports>
        <data_port>
          <name>lane_center_split</name>
        </data_port>
        <data_port>
          <name>road_sign_ext</name>
        </data_port>
        <data_port>
          <name>object_detection_yolo</name>
        </data_port>
        <data_port>
          <name>zebra_detected</name>
        </data_port>
        <data_port>
          <name>lanes_from_landedet</name>
        </data_port>
      </output_data_ports>
      <input_interface_ports/>
      <output_interface_ports/>
      <output_runner_ports/>
      <input_runner_ports/>
      <streaming_in_ports>
        <streaming_in_port>
          <name>basler_rgb</name>
          <portname>basler_rgb</portname>
        </streaming_in_port>
        <streaming_in_port>
          <name>rear_cam</name>
          <portname>rear_cam</portname>
        </streaming_in_port>
      </streaming_in_ports>
      <streaming_out_ports/>
      <sample_streams>
        <sample_stream>
          <name>stream_front_video</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>stream_unsdistorted_video</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>stream_marker_detector_video</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>stream_road_sign_ext</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>stream_birds_eye</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>stream_lane_detection</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>stream_lane_center_split</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>stream_rear_video</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>stream_obj_detection_yolo</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>stream_current_steering</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>stream_egostate_yolo</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>stream_zebra_detection</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>stream_lanes_from_landedet</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>stream_lane_detection_debug_video</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
      </sample_streams>
      <active_runners>
        <active_runner>
          <name>Timer Runner</name>
          <class_id>default_timer_runner.streaming.adtf.cid</class_id>
        </active_runner>
      </active_runners>
      <binding_proxys/>
      <connections>
        <connection>
          <name>Fisheye Undistortion.output_stream_unsdistorted_video.</name>
          <source_connector_path>
            <connector>output</connector>
            <component>Fisheye Undistortion</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>stream_unsdistorted_video</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <deactivated>false</deactivated>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Marker Detector.output_stream_marker_detector_video.</name>
          <source_connector_path>
            <connector>output</connector>
            <component>Marker Detector</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>stream_marker_detector_video</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <deactivated>false</deactivated>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Marker Detector.road_sign_ext_stream_road_sign_ext.</name>
          <source_connector_path>
            <connector>road_sign_ext</connector>
            <component>Marker Detector</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>stream_road_sign_ext</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <deactivated>false</deactivated>
          <sync>true</sync>
        </connection>
        <connection>
          <name>stream_unsdistorted_video._Marker Detector.input</name>
          <source_connector_path>
            <connector/>
            <component>stream_unsdistorted_video</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>input</connector>
            <component>Marker Detector</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <deactivated>false</deactivated>
          <sync>true</sync>
        </connection>
        <connection>
          <name>stream_unsdistorted_video._Birds Eye Transform.in</name>
          <source_connector_path>
            <connector/>
            <component>stream_unsdistorted_video</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>in</connector>
            <component>Birds Eye Transform</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <deactivated>false</deactivated>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Birds Eye Transform.out_stream_birds_eye.</name>
          <source_connector_path>
            <connector>out</connector>
            <component>Birds Eye Transform</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>stream_birds_eye</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <deactivated>false</deactivated>
          <sync>true</sync>
        </connection>
        <connection>
          <name>stream_lane_center_split._lane_center_split.</name>
          <source_connector_path>
            <connector/>
            <component>stream_lane_center_split</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>lane_center_split</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>stream_basler_video._Camera Visualization.basler_video</name>
          <source_connector_path>
            <connector/>
            <component>stream_front_video</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>front_video</connector>
            <component>Camera Visualization</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>stream_unsdistorted_video._Camera Visualization.front_video_undistorted</name>
          <source_connector_path>
            <connector/>
            <component>stream_unsdistorted_video</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>front_video_undistorted</connector>
            <component>Camera Visualization</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>stream_birds_eye._Camera Visualization.birds_eye_video</name>
          <source_connector_path>
            <connector/>
            <component>stream_birds_eye</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>birds_eye_video</connector>
            <component>Camera Visualization</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>stream_rear_video._Camera Visualization.rear_video</name>
          <source_connector_path>
            <connector/>
            <component>stream_rear_video</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>rear_video</connector>
            <component>Camera Visualization</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>stream_lane_detection._Camera Visualization.lane_detection_video</name>
          <source_connector_path>
            <connector/>
            <component>stream_lane_detection</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>lane_detection_video</connector>
            <component>Camera Visualization</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>stream_marker_detector_video._Camera Visualization.marker_detection_video</name>
          <source_connector_path>
            <connector/>
            <component>stream_marker_detector_video</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>marker_detection_video</connector>
            <component>Camera Visualization</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>stream_road_sign_ext._road_sign_ext.</name>
          <source_connector_path>
            <connector/>
            <component>stream_road_sign_ext</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>road_sign_ext</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>basler_rgb._Fisheye Undistortion.input</name>
          <source_connector_path>
            <connector/>
            <component>basler_rgb</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>input</connector>
            <component>Fisheye Undistortion</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <deactivated>false</deactivated>
          <sync>true</sync>
        </connection>
        <connection>
          <name>basler_rgb._stream_front_video.</name>
          <source_connector_path>
            <connector/>
            <component>basler_rgb</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>stream_front_video</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>rear_cam._stream_rear_video.</name>
          <source_connector_path>
            <connector/>
            <component>rear_cam</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>stream_rear_video</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Lane Detection.out_stream_lane_detection.</name>
          <source_connector_path>
            <connector>out</connector>
            <component>Lane Detection</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>stream_lane_detection</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <deactivated>false</deactivated>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Lane Detection.LaneCenterSplit_stream_lane_center_split.</name>
          <source_connector_path>
            <connector>LaneCenterSplit</connector>
            <component>Lane Detection</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>stream_lane_center_split</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <deactivated>false</deactivated>
          <sync>true</sync>
        </connection>
        <connection>
          <name>stream_birds_eye._Lane Detection.in</name>
          <source_connector_path>
            <connector/>
            <component>stream_birds_eye</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>in</connector>
            <component>Lane Detection</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <deactivated>false</deactivated>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Sample Stream._object_detection_yolo.</name>
          <source_connector_path>
            <connector/>
            <component>stream_obj_detection_yolo</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>object_detection_yolo</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>stream_obj_detection_yolo._Camera Visualization.obj_detection_yolo</name>
          <source_connector_path>
            <connector/>
            <component>stream_obj_detection_yolo</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>obj_detection_yolo</connector>
            <component>Camera Visualization</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>stream_unsdistorted_video._Object Detection Filter YOLO.in</name>
          <source_connector_path>
            <connector/>
            <component>stream_unsdistorted_video</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>in</connector>
            <component>Object Detection Filter YOLO</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <deactivated>false</deactivated>
          <sync>false</sync>
        </connection>
        <connection>
          <name>Object Detection Filter YOLO.out_stream_obj_detection_yolo.</name>
          <source_connector_path>
            <connector>out</connector>
            <component>Object Detection Filter YOLO</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>stream_obj_detection_yolo</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <deactivated>false</deactivated>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Timer Runner._Object Detection Filter YOLO.trigger</name>
          <source_connector_path>
            <connector/>
            <component>Timer Runner</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>trigger</connector>
            <component>Object Detection Filter YOLO</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <deactivated>false</deactivated>
          <sync>true</sync>
        </connection>
        <connection>
          <name>current_steering._Sample Stream.</name>
          <source_connector_path>
            <connector/>
            <component>current_steering</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>stream_current_steering</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>stream_current_steering._Lane Detection.SteeringIn</name>
          <source_connector_path>
            <connector/>
            <component>stream_current_steering</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>SteeringIn</connector>
            <component>Lane Detection</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>false</sync>
        </connection>
        <connection>
          <name>egostate_in._stream_egostate_yolo.</name>
          <source_connector_path>
            <connector/>
            <component>egostate_in</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>stream_egostate_yolo</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>stream_egostate_yolo._Object Detection Filter YOLO.EgoState</name>
          <source_connector_path>
            <connector/>
            <component>stream_egostate_yolo</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>EgoState</connector>
            <component>Object Detection Filter YOLO</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <deactivated>false</deactivated>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Lane Detection.ZebraCrossing_stream_zebra_detection.</name>
          <source_connector_path>
            <connector>ZebraCrossing</connector>
            <component>Lane Detection</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>stream_zebra_detection</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>stream_zebra_detection._zebra_detected.</name>
          <source_connector_path>
            <connector/>
            <component>stream_zebra_detection</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>zebra_detected</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Lane Detection.lanes_stream_lanes_from_landedet.</name>
          <source_connector_path>
            <connector>lanes</connector>
            <component>Lane Detection</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>stream_lanes_from_landedet</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>stream_lanes_from_landedet._lanes_from_landedet.</name>
          <source_connector_path>
            <connector/>
            <component>stream_lanes_from_landedet</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>lanes_from_landedet</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>stream_egostate_yolo._Lane Detection.EgoState_in</name>
          <source_connector_path>
            <connector/>
            <component>stream_egostate_yolo</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>EgoState_in</connector>
            <component>Lane Detection</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>false</sync>
        </connection>
        <connection>
          <name>Lane Detection.debug_out_stream_lane_detection_debug_video.</name>
          <source_connector_path>
            <connector>debug_out</connector>
            <component>Lane Detection</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>stream_lane_detection_debug_video</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>stream_lane_detection_debug_video._LaneDetectionDebug.video</name>
          <source_connector_path>
            <connector/>
            <component>stream_lane_detection_debug_video</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>video</connector>
            <component>LaneDetectionDebug</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
      </connections>
      <streaming_interface_in_ports/>
      <streaming_interface_out_ports/>
    </graph>
    <graph>
      <name>camera_visualization</name>
      <filters>
        <filter>
          <name>Front Camera</name>
          <class_id>demo_qt_video_display.ui_filter.adtf.cid</class_id>
          <input_pins>
            <pin>
              <name>video</name>
            </pin>
          </input_pins>
          <output_pins/>
          <runners/>
          <init_priority>0</init_priority>
          <binding_servers/>
          <binding_clients/>
        </filter>
        <filter>
          <name>Rear Camera</name>
          <class_id>demo_qt_video_display.ui_filter.adtf.cid</class_id>
          <input_pins>
            <pin>
              <name>video</name>
            </pin>
          </input_pins>
          <output_pins/>
          <runners/>
          <init_priority>0</init_priority>
          <binding_servers/>
          <binding_clients/>
        </filter>
        <filter>
          <name>Birds Eye View</name>
          <class_id>demo_qt_video_display.ui_filter.adtf.cid</class_id>
          <input_pins>
            <pin>
              <name>video</name>
            </pin>
          </input_pins>
          <output_pins/>
          <runners/>
          <init_priority>0</init_priority>
          <binding_servers/>
          <binding_clients/>
        </filter>
        <filter>
          <name>Lane Detection</name>
          <class_id>demo_qt_video_display.ui_filter.adtf.cid</class_id>
          <input_pins>
            <pin>
              <name>video</name>
            </pin>
          </input_pins>
          <output_pins/>
          <runners/>
          <init_priority>0</init_priority>
          <binding_servers/>
          <binding_clients/>
        </filter>
        <filter>
          <name>Front Camera Undistorted</name>
          <class_id>demo_qt_video_display.ui_filter.adtf.cid</class_id>
          <input_pins>
            <pin>
              <name>video</name>
            </pin>
          </input_pins>
          <output_pins/>
          <runners/>
          <init_priority>0</init_priority>
          <binding_servers/>
          <binding_clients/>
        </filter>
        <filter>
          <name>Marker Detection</name>
          <class_id>demo_qt_video_display.ui_filter.adtf.cid</class_id>
          <input_pins>
            <pin>
              <name>video</name>
            </pin>
          </input_pins>
          <output_pins/>
          <runners/>
          <init_priority>0</init_priority>
          <binding_servers/>
          <binding_clients/>
        </filter>
        <filter>
          <name>Object Detection</name>
          <class_id>demo_qt_video_display.ui_filter.adtf.cid</class_id>
          <input_pins>
            <pin>
              <name>video</name>
            </pin>
          </input_pins>
          <output_pins/>
          <runners/>
          <init_priority>0</init_priority>
          <binding_servers/>
          <binding_clients/>
        </filter>
      </filters>
      <subgraphs/>
      <input_data_ports>
        <data_port>
          <name>front_video</name>
        </data_port>
        <data_port>
          <name>rear_video</name>
        </data_port>
        <data_port>
          <name>birds_eye_video</name>
        </data_port>
        <data_port>
          <name>lane_detection_video</name>
        </data_port>
        <data_port>
          <name>front_video_undistorted</name>
        </data_port>
        <data_port>
          <name>marker_detection_video</name>
        </data_port>
        <data_port>
          <name>obj_detection_yolo</name>
        </data_port>
      </input_data_ports>
      <output_data_ports/>
      <input_interface_ports/>
      <output_interface_ports/>
      <output_runner_ports/>
      <input_runner_ports/>
      <streaming_in_ports/>
      <streaming_out_ports/>
      <sample_streams>
        <sample_stream>
          <name>stream_front_video</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>stream_rear_video</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>stream_birds_eye</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>stream_lane_detection</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>stream_front_video_undistorted</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>stream_marker_detection_video</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>stream_obj_detection_yolo</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
      </sample_streams>
      <active_runners/>
      <binding_proxys/>
      <connections>
        <connection>
          <name>basler_video._stream_balser_video.</name>
          <source_connector_path>
            <connector/>
            <component>front_video</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>stream_front_video</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>stream_balser_video._Basler Camera.video</name>
          <source_connector_path>
            <connector/>
            <component>stream_front_video</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>video</connector>
            <component>Front Camera</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>rear_video._stream_rear_video.</name>
          <source_connector_path>
            <connector/>
            <component>rear_video</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>stream_rear_video</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>stream_rear_video._Rear Camera.video</name>
          <source_connector_path>
            <connector/>
            <component>stream_rear_video</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>video</connector>
            <component>Rear Camera</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>birds_eye_video._Sample Stream.</name>
          <source_connector_path>
            <connector/>
            <component>birds_eye_video</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>stream_birds_eye</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Sample Stream._Birds Eye View.video</name>
          <source_connector_path>
            <connector/>
            <component>stream_birds_eye</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>video</connector>
            <component>Birds Eye View</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>lane_detection_video._Sample Stream.</name>
          <source_connector_path>
            <connector/>
            <component>lane_detection_video</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>stream_lane_detection</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Sample Stream._Lane Detection.video</name>
          <source_connector_path>
            <connector/>
            <component>stream_lane_detection</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>video</connector>
            <component>Lane Detection</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>front_video_undistorted._stream_front_video_undistorted.</name>
          <source_connector_path>
            <connector/>
            <component>front_video_undistorted</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>stream_front_video_undistorted</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>stream_front_video_undistorted._Front Camera Undistorted.video</name>
          <source_connector_path>
            <connector/>
            <component>stream_front_video_undistorted</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>video</connector>
            <component>Front Camera Undistorted</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>marker_detection_video._stream_marker_detection_video.</name>
          <source_connector_path>
            <connector/>
            <component>marker_detection_video</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>stream_marker_detection_video</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>stream_marker_detection_video._Marker Detection.video</name>
          <source_connector_path>
            <connector/>
            <component>stream_marker_detection_video</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>video</connector>
            <component>Marker Detection</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>obj_detection_yolo._Sample Stream.</name>
          <source_connector_path>
            <connector/>
            <component>obj_detection_yolo</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>stream_obj_detection_yolo</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Sample Stream._Object Detection.video</name>
          <source_connector_path>
            <connector/>
            <component>stream_obj_detection_yolo</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>video</connector>
            <component>Object Detection</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
      </connections>
      <streaming_interface_in_ports/>
      <streaming_interface_out_ports/>
    </graph>
    <graph>
      <name>camera_calib</name>
      <filters>
        <filter>
          <name>Camera Calibration</name>
          <class_id>camera_calibration.filter.demo.aadc.cid</class_id>
          <input_pins>
            <pin>
              <name>video_rgb</name>
            </pin>
          </input_pins>
          <output_pins/>
          <runners/>
          <init_priority>0</init_priority>
          <binding_servers/>
          <binding_clients/>
        </filter>
        <filter>
          <name>Fisheye Undistortiondcw</name>
          <class_id>fisheye_undistortion.filter.demo.aadc.cid</class_id>
          <input_pins>
            <pin>
              <name>input</name>
            </pin>
          </input_pins>
          <output_pins>
            <pin>
              <name>output</name>
            </pin>
          </output_pins>
          <runners/>
          <init_priority>0</init_priority>
          <binding_servers/>
          <binding_clients/>
        </filter>
      </filters>
      <subgraphs/>
      <input_data_ports/>
      <output_data_ports/>
      <input_interface_ports/>
      <output_interface_ports/>
      <output_runner_ports/>
      <input_runner_ports/>
      <streaming_in_ports>
        <streaming_in_port>
          <name>basler_rgb</name>
          <portname>basler_rgb</portname>
        </streaming_in_port>
      </streaming_in_ports>
      <streaming_out_ports/>
      <sample_streams>
        <sample_stream>
          <name>Sample Stream</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
      </sample_streams>
      <active_runners/>
      <binding_proxys/>
      <connections>
        <connection>
          <name>basler_rgb._Fisheye Undistortiondcw.input</name>
          <source_connector_path>
            <connector/>
            <component>basler_rgb</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>input</connector>
            <component>Fisheye Undistortiondcw</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Fisheye Undistortiondcw.output_Sample Stream.</name>
          <source_connector_path>
            <connector>output</connector>
            <component>Fisheye Undistortiondcw</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>Sample Stream</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Sample Stream._Camera Calibration.video_rgb</name>
          <source_connector_path>
            <connector/>
            <component>Sample Stream</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>video_rgb</connector>
            <component>Camera Calibration</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
      </connections>
      <streaming_interface_in_ports/>
      <streaming_interface_out_ports/>
    </graph>
    <graph>
      <name>sensor_sanitization</name>
      <filters>
        <filter>
          <name>Sanitized Sensor Visualization</name>
          <class_id>sensor_visualization.filter.demo.aadc.cid</class_id>
          <input_pins>
            <pin>
              <name>ultrasonic_struct</name>
            </pin>
            <pin>
              <name>wheel_left</name>
            </pin>
            <pin>
              <name>wheel_right</name>
            </pin>
            <pin>
              <name>iner_meas_unit</name>
            </pin>
            <pin>
              <name>laser_scanner</name>
            </pin>
            <pin>
              <name>voltage_struct</name>
            </pin>
          </input_pins>
          <output_pins/>
          <runners/>
          <init_priority>0</init_priority>
          <binding_servers/>
          <binding_clients/>
        </filter>
        <filter>
          <name>SensorUltraSonic</name>
          <class_id>fc_sensor_uss.filter.user.aadc.cid</class_id>
          <input_pins>
            <pin>
              <name>input</name>
            </pin>
          </input_pins>
          <output_pins>
            <pin>
              <name>output</name>
            </pin>
            <pin>
              <name>SideRight</name>
            </pin>
            <pin>
              <name>SideLeft</name>
            </pin>
            <pin>
              <name>RearRight</name>
            </pin>
            <pin>
              <name>RearCenter</name>
            </pin>
            <pin>
              <name>RearLeft</name>
            </pin>
          </output_pins>
          <runners/>
          <init_priority>0</init_priority>
          <binding_servers/>
          <binding_clients/>
        </filter>
        <filter>
          <name>SensorLidar</name>
          <class_id>fc_sensor_lidar.filter.user.aadc.cid</class_id>
          <input_pins>
            <pin>
              <name>input</name>
            </pin>
          </input_pins>
          <output_pins>
            <pin>
              <name>output</name>
            </pin>
          </output_pins>
          <runners/>
          <init_priority>0</init_priority>
          <binding_servers/>
          <binding_clients/>
        </filter>
        <filter>
          <name>Sensor Visualization</name>
          <class_id>sensor_visualization.filter.demo.aadc.cid</class_id>
          <input_pins>
            <pin>
              <name>ultrasonic_struct</name>
            </pin>
            <pin>
              <name>wheel_right</name>
            </pin>
            <pin>
              <name>wheel_left</name>
            </pin>
            <pin>
              <name>iner_meas_unit</name>
            </pin>
            <pin>
              <name>laser_scanner</name>
            </pin>
          </input_pins>
          <output_pins/>
          <runners/>
          <init_priority>0</init_priority>
          <binding_servers/>
          <binding_clients/>
        </filter>
        <filter>
          <name>WheelSpeedConverter</name>
          <class_id>fc_wheeeeeehl_speed_converter.filter.user.aadc.cid</class_id>
          <input_pins>
            <pin>
              <name>wheel_right</name>
            </pin>
            <pin>
              <name>wheel_left</name>
            </pin>
          </input_pins>
          <output_pins>
            <pin>
              <name>wheel_left_plaus</name>
            </pin>
            <pin>
              <name>wheel_right_plaus</name>
            </pin>
            <pin>
              <name>vehicle_speed</name>
            </pin>
            <pin>
              <name>distance_overall</name>
            </pin>
          </output_pins>
          <runners/>
          <init_priority>0</init_priority>
          <binding_servers/>
          <binding_clients/>
        </filter>
      </filters>
      <subgraphs/>
      <input_data_ports/>
      <output_data_ports>
        <data_port>
          <name>sanitized_ultrasonic_struct</name>
        </data_port>
        <data_port>
          <name>sanitized_us_sideright</name>
        </data_port>
        <data_port>
          <name>sanitized_us_sideleft</name>
        </data_port>
        <data_port>
          <name>sanitized_us_rearright</name>
        </data_port>
        <data_port>
          <name>sanitized_us_rearcenter</name>
        </data_port>
        <data_port>
          <name>sanitized_us_rearleft</name>
        </data_port>
        <data_port>
          <name>vehicle_speed</name>
        </data_port>
        <data_port>
          <name>distance_overall</name>
        </data_port>
        <data_port>
          <name>sanitized_laser_scanner</name>
        </data_port>
        <data_port>
          <name>imu</name>
        </data_port>
      </output_data_ports>
      <input_interface_ports/>
      <output_interface_ports/>
      <output_runner_ports/>
      <input_runner_ports/>
      <streaming_in_ports>
        <streaming_in_port>
          <name>ultrasonic_struct</name>
          <portname>ultrasonic_struct</portname>
        </streaming_in_port>
        <streaming_in_port>
          <name>wheel_left</name>
          <portname>wheel_left</portname>
        </streaming_in_port>
        <streaming_in_port>
          <name>wheel_right</name>
          <portname>wheel_right</portname>
        </streaming_in_port>
        <streaming_in_port>
          <name>iner_meas_unit</name>
          <portname>iner_meas_unit</portname>
        </streaming_in_port>
        <streaming_in_port>
          <name>laser_scanner</name>
          <portname>laser_scanner</portname>
        </streaming_in_port>
        <streaming_in_port>
          <name>voltage_struct</name>
          <portname>voltage_struct</portname>
        </streaming_in_port>
      </streaming_in_ports>
      <streaming_out_ports/>
      <sample_streams>
        <sample_stream>
          <name>stream_uss_sanitized</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>stream_wheel_left</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>stream_wheel_right</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>stream_laser_scanner</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>stream_us_sr</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>stream_us_sl</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>stream_us_rr</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>stream_us_rc</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>stream_us_rl</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>stream_vehicle_speed</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>stream_distance_overall</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>stream_imu</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
      </sample_streams>
      <active_runners/>
      <binding_proxys/>
      <connections>
        <connection>
          <name>stream_uss_sanitized._Sensor Visualization.ultrasonic_struct</name>
          <source_connector_path>
            <connector/>
            <component>stream_uss_sanitized</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>ultrasonic_struct</connector>
            <component>Sanitized Sensor Visualization</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>SensorUltraSonic.output_stream_uss_sanitized.</name>
          <source_connector_path>
            <connector>output</connector>
            <component>SensorUltraSonic</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>stream_uss_sanitized</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>ultrasonic_struct._SensorUltraSonic.input</name>
          <source_connector_path>
            <connector/>
            <component>ultrasonic_struct</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>input</connector>
            <component>SensorUltraSonic</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>stream_wheel_left._Sensor Visualization.wheel_left</name>
          <source_connector_path>
            <connector/>
            <component>stream_wheel_left</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>wheel_left</connector>
            <component>Sanitized Sensor Visualization</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>stream_wheel_right._Sensor Visualization.wheel_right</name>
          <source_connector_path>
            <connector/>
            <component>stream_wheel_right</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>wheel_right</connector>
            <component>Sanitized Sensor Visualization</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>iner_meas_unit._Sensor Visualization.iner_meas_unit</name>
          <source_connector_path>
            <connector/>
            <component>iner_meas_unit</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>iner_meas_unit</connector>
            <component>Sanitized Sensor Visualization</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>laser_scanner._SensorLidar.input</name>
          <source_connector_path>
            <connector/>
            <component>laser_scanner</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>input</connector>
            <component>SensorLidar</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>SensorLidar.output_stream_laser_scanner.</name>
          <source_connector_path>
            <connector>output</connector>
            <component>SensorLidar</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>stream_laser_scanner</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>stream_laser_scanner._Sensor Visualization.laser_scanner</name>
          <source_connector_path>
            <connector/>
            <component>stream_laser_scanner</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>laser_scanner</connector>
            <component>Sanitized Sensor Visualization</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>voltage_struct._Sensor Visualization.voltage_struct</name>
          <source_connector_path>
            <connector/>
            <component>voltage_struct</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>voltage_struct</connector>
            <component>Sanitized Sensor Visualization</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>stream_uss_sanitized._sanitized_ultrasonic_struct.</name>
          <source_connector_path>
            <connector/>
            <component>stream_uss_sanitized</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>sanitized_ultrasonic_struct</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>stream_us_sr._sanitized_us_sideright.</name>
          <source_connector_path>
            <connector/>
            <component>stream_us_sr</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>sanitized_us_sideright</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>stream_us_sl._sanitized_us_sideleft.</name>
          <source_connector_path>
            <connector/>
            <component>stream_us_sl</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>sanitized_us_sideleft</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>stream_us_rr._sanitized_us_rearright.</name>
          <source_connector_path>
            <connector/>
            <component>stream_us_rr</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>sanitized_us_rearright</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>stream_us_rc._sanitized_us_rearcenter.</name>
          <source_connector_path>
            <connector/>
            <component>stream_us_rc</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>sanitized_us_rearcenter</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>stream_us_rl._sanitized_us_rearleft.</name>
          <source_connector_path>
            <connector/>
            <component>stream_us_rl</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>sanitized_us_rearleft</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>SensorUltraSonic.SideRight_stream_us_sr.</name>
          <source_connector_path>
            <connector>SideRight</connector>
            <component>SensorUltraSonic</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>stream_us_sr</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>SensorUltraSonic.SideLeft_stream_us_sl.</name>
          <source_connector_path>
            <connector>SideLeft</connector>
            <component>SensorUltraSonic</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>stream_us_sl</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>SensorUltraSonic.RearRight_stream_us_rr.</name>
          <source_connector_path>
            <connector>RearRight</connector>
            <component>SensorUltraSonic</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>stream_us_rr</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>SensorUltraSonic.RearCenter_stream_us_rc.</name>
          <source_connector_path>
            <connector>RearCenter</connector>
            <component>SensorUltraSonic</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>stream_us_rc</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>SensorUltraSonic.RearLeft_stream_us_rl.</name>
          <source_connector_path>
            <connector>RearLeft</connector>
            <component>SensorUltraSonic</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>stream_us_rl</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>stream_distance_overall._distance_overall.</name>
          <source_connector_path>
            <connector/>
            <component>stream_distance_overall</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>distance_overall</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>stream_vehicle_speed._vehicle_speed.</name>
          <source_connector_path>
            <connector/>
            <component>stream_vehicle_speed</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>vehicle_speed</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>stream_laser_scanner._sanitized_laser_scanner.</name>
          <source_connector_path>
            <connector/>
            <component>stream_laser_scanner</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>sanitized_laser_scanner</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>iner_meas_unit._Sample Stream.</name>
          <source_connector_path>
            <connector/>
            <component>iner_meas_unit</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>stream_imu</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Sample Stream._imu.</name>
          <source_connector_path>
            <connector/>
            <component>stream_imu</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>imu</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>ultrasonic_struct._Sensor Visualization.ultrasonic_struct</name>
          <source_connector_path>
            <connector/>
            <component>ultrasonic_struct</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>ultrasonic_struct</connector>
            <component>Sensor Visualization</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>wheel_right._Sensor Visualization.wheel_right</name>
          <source_connector_path>
            <connector/>
            <component>wheel_right</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>wheel_right</connector>
            <component>Sensor Visualization</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>wheel_left._Sensor Visualization.wheel_left</name>
          <source_connector_path>
            <connector/>
            <component>wheel_left</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>wheel_left</connector>
            <component>Sensor Visualization</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>stream_imu._Sensor Visualization.iner_meas_unit</name>
          <source_connector_path>
            <connector/>
            <component>stream_imu</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>iner_meas_unit</connector>
            <component>Sensor Visualization</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>laser_scanner._Sensor Visualization.laser_scanner</name>
          <source_connector_path>
            <connector/>
            <component>laser_scanner</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>laser_scanner</connector>
            <component>Sensor Visualization</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>wheel_right._WheelSpeedConverter.wheel_right</name>
          <source_connector_path>
            <connector/>
            <component>wheel_right</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>wheel_right</connector>
            <component>WheelSpeedConverter</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>wheel_left._WheelSpeedConverter.wheel_left</name>
          <source_connector_path>
            <connector/>
            <component>wheel_left</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>wheel_left</connector>
            <component>WheelSpeedConverter</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>WheelSpeedConverter.wheel_left_plaus_stream_wheel_left.</name>
          <source_connector_path>
            <connector>wheel_left_plaus</connector>
            <component>WheelSpeedConverter</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>stream_wheel_left</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>WheelSpeedConverter.wheel_right_plaus_stream_wheel_right.</name>
          <source_connector_path>
            <connector>wheel_right_plaus</connector>
            <component>WheelSpeedConverter</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>stream_wheel_right</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>WheelSpeedConverter.vehicle_speed_stream_vehicle_speed.</name>
          <source_connector_path>
            <connector>vehicle_speed</connector>
            <component>WheelSpeedConverter</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>stream_vehicle_speed</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>WheelSpeedConverter.distance_overall_stream_distance_overall.</name>
          <source_connector_path>
            <connector>distance_overall</connector>
            <component>WheelSpeedConverter</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>stream_distance_overall</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
      </connections>
      <streaming_interface_in_ports/>
      <streaming_interface_out_ports/>
    </graph>
    <graph>
      <name>mission_control</name>
      <filters>
        <filter>
          <name>MissionController</name>
          <class_id>fc_mission_controller.filter.user.aadc.cid</class_id>
          <input_pins>
            <pin>
              <name>in_emergency_brake</name>
            </pin>
            <pin>
              <name>in_ego_state</name>
            </pin>
            <pin>
              <name>in_jurystruct</name>
            </pin>
            <pin>
              <name>in_maneuver_list</name>
            </pin>
            <pin>
              <name>OpenDriveMapAnalyzerInstanceSynchronization</name>
            </pin>
          </input_pins>
          <output_pins>
            <pin>
              <name>out_speed</name>
            </pin>
            <pin>
              <name>out_steering_angle</name>
            </pin>
            <pin>
              <name>out_light_turnright</name>
            </pin>
            <pin>
              <name>out_light_turnleft</name>
            </pin>
            <pin>
              <name>out_light_hazard</name>
            </pin>
            <pin>
              <name>out_light_head</name>
            </pin>
            <pin>
              <name>out_light_brake</name>
            </pin>
            <pin>
              <name>out_light_reverse</name>
            </pin>
            <pin>
              <name>out_emergency_brake</name>
            </pin>
            <pin>
              <name>out_driverstate</name>
            </pin>
          </output_pins>
          <runners/>
          <init_priority>0</init_priority>
          <binding_servers/>
          <binding_clients/>
        </filter>
        <filter>
          <name>WheelSpeedController</name>
          <class_id>wheel_speed_controller.filter.user.aadc.cid</class_id>
          <input_pins>
            <pin>
              <name>measured_vehicle_speed</name>
            </pin>
            <pin>
              <name>desired_vehicle_speed</name>
            </pin>
            <pin>
              <name>emergency_break</name>
            </pin>
          </input_pins>
          <output_pins>
            <pin>
              <name>actuator_output</name>
            </pin>
          </output_pins>
          <runners>
            <runner>
              <name>trigger</name>
            </runner>
          </runners>
          <init_priority>0</init_priority>
          <binding_servers/>
          <binding_clients/>
        </filter>
      </filters>
      <subgraphs>
        <subgraph>
          <name>Environment</name>
          <graph>default_filter_graph</graph>
          <init_priority>0</init_priority>
        </subgraph>
        <subgraph>
          <name>jury_interaction</name>
          <graph>jury_interaction</graph>
          <init_priority>0</init_priority>
        </subgraph>
      </subgraphs>
      <input_data_ports/>
      <output_data_ports/>
      <input_interface_ports/>
      <output_interface_ports/>
      <output_runner_ports/>
      <input_runner_ports/>
      <streaming_in_ports/>
      <streaming_out_ports>
        <streaming_out_port>
          <name>turn_signal_right</name>
          <portname>turn_signal_right</portname>
        </streaming_out_port>
        <streaming_out_port>
          <name>turn_signal_left</name>
          <portname>turn_signal_left</portname>
        </streaming_out_port>
        <streaming_out_port>
          <name>hazard_light</name>
          <portname>hazard_light</portname>
        </streaming_out_port>
        <streaming_out_port>
          <name>head_light</name>
          <portname>head_light</portname>
        </streaming_out_port>
        <streaming_out_port>
          <name>brake_light</name>
          <portname>brake_light</portname>
        </streaming_out_port>
        <streaming_out_port>
          <name>reverse_light</name>
          <portname>reverse_light</portname>
        </streaming_out_port>
        <streaming_out_port>
          <name>speed_out</name>
          <portname>speed_out</portname>
        </streaming_out_port>
        <streaming_out_port>
          <name>steering_out</name>
          <portname>steering_out</portname>
        </streaming_out_port>
      </streaming_out_ports>
      <sample_streams>
        <sample_stream>
          <name>stream_emergency</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>stream_velocity</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>mc_out_speed</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>mc_out_emergency_brake</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>stream_egostate</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>stream_jmi_mc_jurystruct</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>stream_jmi_mc_maneuverlist</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>stream_mc_jmi_driverstate</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>stream_jmi_em_rsmap</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>stream_jmi_em_odmap</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>stream_em_mc_openDriveMapAnalyzerInstanceSynchronization</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>stream_steering_emergencybreak</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
      </sample_streams>
      <active_runners>
        <active_runner>
          <name>Timer Runner</name>
          <class_id>default_timer_runner.streaming.adtf.cid</class_id>
        </active_runner>
      </active_runners>
      <binding_proxys/>
      <connections>
        <connection>
          <name>Environment.emergency_break_stream_emergency.</name>
          <source_connector_path>
            <connector>emergency_break</connector>
            <component>Environment</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>stream_emergency</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Environment.measured_vehicle_speed_stream_velocity.</name>
          <source_connector_path>
            <connector>measured_vehicle_speed</connector>
            <component>Environment</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>stream_velocity</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>MissionController.out_speed_mc_out_speed.</name>
          <source_connector_path>
            <connector>out_speed</connector>
            <component>MissionController</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>mc_out_speed</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>MissionController.out_light_turnright_turn_signal_right.</name>
          <source_connector_path>
            <connector>out_light_turnright</connector>
            <component>MissionController</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>turn_signal_right</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>MissionController.out_light_turnleft_turn_signal_left.</name>
          <source_connector_path>
            <connector>out_light_turnleft</connector>
            <component>MissionController</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>turn_signal_left</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>MissionController.out_light_hazard_hazard_light.</name>
          <source_connector_path>
            <connector>out_light_hazard</connector>
            <component>MissionController</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>hazard_light</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>MissionController.out_light_head_head_light.</name>
          <source_connector_path>
            <connector>out_light_head</connector>
            <component>MissionController</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>head_light</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>MissionController.out_light_brake_brake_light.</name>
          <source_connector_path>
            <connector>out_light_brake</connector>
            <component>MissionController</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>brake_light</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>MissionController.out_light_reverse_reverse_light.</name>
          <source_connector_path>
            <connector>out_light_reverse</connector>
            <component>MissionController</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>reverse_light</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>stream_emergency._MissionController.in_emergency_brake</name>
          <source_connector_path>
            <connector/>
            <component>stream_emergency</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>in_emergency_brake</connector>
            <component>MissionController</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>MissionController.out_emergency_brake_mc_out_emergency_brake.</name>
          <source_connector_path>
            <connector>out_emergency_brake</connector>
            <component>MissionController</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>mc_out_emergency_brake</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Environment.envmodel_out_ego_state_stream_egostate.</name>
          <source_connector_path>
            <connector>envmodel_out_ego_state</connector>
            <component>Environment</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>stream_egostate</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>stream_egostate._MissionController.in_ego_state</name>
          <source_connector_path>
            <connector/>
            <component>stream_egostate</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>in_ego_state</connector>
            <component>MissionController</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>jury_interaction.jm_jury_struct_stream_jmi_mc_jurystruct.</name>
          <source_connector_path>
            <connector>jm_jury_struct</connector>
            <component>jury_interaction</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>stream_jmi_mc_jurystruct</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>stream_jmi_mc_jurystruct._MissionController.in_jurystruct</name>
          <source_connector_path>
            <connector/>
            <component>stream_jmi_mc_jurystruct</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>in_jurystruct</connector>
            <component>MissionController</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>jury_interaction.jm_maneuver_list_stream_jmi_mc_maneuverlist.</name>
          <source_connector_path>
            <connector>jm_maneuver_list</connector>
            <component>jury_interaction</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>stream_jmi_mc_maneuverlist</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>stream_jmi_mc_maneuverlist._MissionController.in_maneuver_list</name>
          <source_connector_path>
            <connector/>
            <component>stream_jmi_mc_maneuverlist</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>in_maneuver_list</connector>
            <component>MissionController</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>MissionController.out_driverstate_stream_mc_jmi_driverstate.</name>
          <source_connector_path>
            <connector>out_driverstate</connector>
            <component>MissionController</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>stream_mc_jmi_driverstate</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>stream_mc_jmi_driverstate._jury_interaction.jm_driver_state</name>
          <source_connector_path>
            <connector/>
            <component>stream_mc_jmi_driverstate</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>jm_driver_state</connector>
            <component>jury_interaction</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <deactivated>false</deactivated>
          <sync>true</sync>
        </connection>
        <connection>
          <name>jury_interaction.jm_odmap_stream_jmi_em_odmap.</name>
          <source_connector_path>
            <connector>jm_odmap</connector>
            <component>jury_interaction</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>stream_jmi_em_odmap</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>stream_jmi_em_odmap._Environment.em_odmap</name>
          <source_connector_path>
            <connector/>
            <component>stream_jmi_em_odmap</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>em_odmap</connector>
            <component>Environment</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>jury_interaction.jm_tsmap_stream_jmi_em_rsmap.</name>
          <source_connector_path>
            <connector>jm_tsmap</connector>
            <component>jury_interaction</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>stream_jmi_em_rsmap</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>stream_jmi_em_rsmap._Environment.em_tsmap</name>
          <source_connector_path>
            <connector/>
            <component>stream_jmi_em_rsmap</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>em_tsmap</connector>
            <component>Environment</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Environment.envModel_out_openDriveMapAnalyzerInstanceSynchronization_stream_em_mc_openDriveMapAnalyzerInstanceSynchronization.</name>
          <source_connector_path>
            <connector>envModel_out_openDriveMapAnalyzerInstanceSynchronization</connector>
            <component>Environment</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>stream_em_mc_openDriveMapAnalyzerInstanceSynchronization</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>stream_em_mc_openDriveMapAnalyzerInstanceSynchronization._MissionController.OpenDriveMapAnalyzerInstanceSynchronization</name>
          <source_connector_path>
            <connector/>
            <component>stream_em_mc_openDriveMapAnalyzerInstanceSynchronization</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>OpenDriveMapAnalyzerInstanceSynchronization</connector>
            <component>MissionController</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>MissionController.out_steering_angle_stream_steering_emergencybreak.</name>
          <source_connector_path>
            <connector>out_steering_angle</connector>
            <component>MissionController</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>stream_steering_emergencybreak</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>stream_steering_emergencybreak._Environment.steering_in</name>
          <source_connector_path>
            <connector/>
            <component>stream_steering_emergencybreak</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>steering_in</connector>
            <component>Environment</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>stream_steering_emergencybreak._steering_out.</name>
          <source_connector_path>
            <connector/>
            <component>stream_steering_emergencybreak</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>steering_out</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Timer Runner._WheelSpeedController.trigger</name>
          <source_connector_path>
            <connector/>
            <component>Timer Runner</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>trigger</connector>
            <component>WheelSpeedController</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>WheelSpeedController.actuator_output_speed_out.</name>
          <source_connector_path>
            <connector>actuator_output</connector>
            <component>WheelSpeedController</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>speed_out</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>stream_velocity._WheelSpeedController.measured_vehicle_speed</name>
          <source_connector_path>
            <connector/>
            <component>stream_velocity</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>measured_vehicle_speed</connector>
            <component>WheelSpeedController</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>false</sync>
        </connection>
        <connection>
          <name>mc_out_speed._WheelSpeedController.desired_vehicle_speed</name>
          <source_connector_path>
            <connector/>
            <component>mc_out_speed</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>desired_vehicle_speed</connector>
            <component>WheelSpeedController</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <deactivated>false</deactivated>
          <sync>false</sync>
        </connection>
        <connection>
          <name>mc_out_emergency_brake._WheelSpeedController.emergency_break</name>
          <source_connector_path>
            <connector/>
            <component>mc_out_emergency_brake</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>emergency_break</connector>
            <component>WheelSpeedController</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>false</sync>
        </connection>
      </connections>
      <streaming_interface_in_ports/>
      <streaming_interface_out_ports/>
    </graph>
    <graph>
      <name>jury_interaction</name>
      <filters>
        <filter>
          <name>JuryModuleReceiver</name>
          <class_id>jurymodule_receiver.filter.user.aadc.cid</class_id>
          <input_pins>
            <pin>
              <name>in_jurystruct</name>
            </pin>
            <pin>
              <name>in_maneuver_list</name>
            </pin>
            <pin>
              <name>in_opendrive_map</name>
            </pin>
            <pin>
              <name>in_trafficsign_map</name>
            </pin>
          </input_pins>
          <output_pins>
            <pin>
              <name>out_jurystruct</name>
            </pin>
            <pin>
              <name>out_maneuver_list</name>
            </pin>
            <pin>
              <name>out_opendrive_map</name>
            </pin>
            <pin>
              <name>out_trafficsign_map</name>
            </pin>
          </output_pins>
          <runners/>
          <init_priority>0</init_priority>
          <binding_servers/>
          <binding_clients/>
        </filter>
        <filter>
          <name>JuryModuleSender</name>
          <class_id>jurymodule_sender.filter.user.aadc.cid</class_id>
          <input_pins>
            <pin>
              <name>in_carstate</name>
            </pin>
          </input_pins>
          <output_pins>
            <pin>
              <name>out_carstate</name>
            </pin>
          </output_pins>
          <runners/>
          <init_priority>0</init_priority>
          <binding_servers/>
          <binding_clients/>
        </filter>
      </filters>
      <subgraphs/>
      <input_data_ports>
        <data_port>
          <name>jm_driver_state</name>
        </data_port>
      </input_data_ports>
      <output_data_ports>
        <data_port>
          <name>jm_jury_struct</name>
        </data_port>
        <data_port>
          <name>jm_maneuver_list</name>
        </data_port>
        <data_port>
          <name>jm_odmap</name>
        </data_port>
        <data_port>
          <name>jm_tsmap</name>
        </data_port>
      </output_data_ports>
      <input_interface_ports/>
      <output_interface_ports/>
      <output_runner_ports/>
      <input_runner_ports/>
      <streaming_in_ports>
        <streaming_in_port>
          <name>jury_struct</name>
          <portname>jury_struct</portname>
        </streaming_in_port>
        <streaming_in_port>
          <name>maneuver_list</name>
          <portname>maneuver_list</portname>
        </streaming_in_port>
        <streaming_in_port>
          <name>od_map</name>
          <portname>od_map</portname>
        </streaming_in_port>
        <streaming_in_port>
          <name>ts_map</name>
          <portname>ts_map</portname>
        </streaming_in_port>
      </streaming_in_ports>
      <streaming_out_ports>
        <streaming_out_port>
          <name>driver_struct</name>
          <portname>driver_struct</portname>
        </streaming_out_port>
      </streaming_out_ports>
      <sample_streams>
        <sample_stream>
          <name>stream_jm_driver_state</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>stream_jm_jury_struct</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>stream_jm_maneuver_list</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>stream_jm_odmap</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>stream_jm_tsmap</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
      </sample_streams>
      <active_runners/>
      <binding_proxys/>
      <connections>
        <connection>
          <name>car_state._Sample Stream.</name>
          <source_connector_path>
            <connector/>
            <component>jm_driver_state</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>stream_jm_driver_state</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>stream_jm_jury_struct._jm_jury_struct.</name>
          <source_connector_path>
            <connector/>
            <component>stream_jm_jury_struct</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>jm_jury_struct</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>stream_jm_maneuver_list._jm_maneuver_list.</name>
          <source_connector_path>
            <connector/>
            <component>stream_jm_maneuver_list</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>jm_maneuver_list</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>stream_jm_odmap._jm_odmap.</name>
          <source_connector_path>
            <connector/>
            <component>stream_jm_odmap</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>jm_odmap</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>stream_jm_tsmap._jm_tsmap.</name>
          <source_connector_path>
            <connector/>
            <component>stream_jm_tsmap</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>jm_tsmap</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>jury_struct._JuryModuleReceiver.in_jurystruct</name>
          <source_connector_path>
            <connector/>
            <component>jury_struct</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>in_jurystruct</connector>
            <component>JuryModuleReceiver</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>maneuver_list._JuryModuleReceiver.in_maneuver_list</name>
          <source_connector_path>
            <connector/>
            <component>maneuver_list</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>in_maneuver_list</connector>
            <component>JuryModuleReceiver</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>od_map._JuryModuleReceiver.in_opendrive_map</name>
          <source_connector_path>
            <connector/>
            <component>od_map</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>in_opendrive_map</connector>
            <component>JuryModuleReceiver</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>ts_map._JuryModuleReceiver.in_trafficsign_map</name>
          <source_connector_path>
            <connector/>
            <component>ts_map</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>in_trafficsign_map</connector>
            <component>JuryModuleReceiver</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>JuryModuleReceiver.out_jurystruct_stream_jm_jury_struct.</name>
          <source_connector_path>
            <connector>out_jurystruct</connector>
            <component>JuryModuleReceiver</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>stream_jm_jury_struct</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>JuryModuleReceiver.out_maneuver_list_stream_jm_maneuver_list.</name>
          <source_connector_path>
            <connector>out_maneuver_list</connector>
            <component>JuryModuleReceiver</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>stream_jm_maneuver_list</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>JuryModuleReceiver.out_opendrive_map_stream_jm_odmap.</name>
          <source_connector_path>
            <connector>out_opendrive_map</connector>
            <component>JuryModuleReceiver</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>stream_jm_odmap</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>JuryModuleReceiver.out_trafficsign_map_stream_jm_tsmap.</name>
          <source_connector_path>
            <connector>out_trafficsign_map</connector>
            <component>JuryModuleReceiver</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>stream_jm_tsmap</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>stream_jm_driver_state._JuryModuleSender.in_carstate</name>
          <source_connector_path>
            <connector/>
            <component>stream_jm_driver_state</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>in_carstate</connector>
            <component>JuryModuleSender</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>JuryModuleSender.out_carstate_driver_struct.</name>
          <source_connector_path>
            <connector>out_carstate</connector>
            <component>JuryModuleSender</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>driver_struct</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
      </connections>
      <streaming_interface_in_ports/>
      <streaming_interface_out_ports/>
    </graph>
    <graph>
      <name>camera_tweaking</name>
      <filters>
        <filter>
          <name>Fisheye Undistortion</name>
          <class_id>fisheye_undistortion.filter.demo.aadc.cid</class_id>
          <input_pins>
            <pin>
              <name>input</name>
            </pin>
          </input_pins>
          <output_pins>
            <pin>
              <name>output</name>
            </pin>
          </output_pins>
          <runners/>
          <init_priority>0</init_priority>
          <binding_servers/>
          <binding_clients/>
        </filter>
        <filter>
          <name>Birds Eye Transform</name>
          <class_id>birds_eye_transform.filter.user.aadc.cid</class_id>
          <input_pins>
            <pin>
              <name>in</name>
            </pin>
          </input_pins>
          <output_pins>
            <pin>
              <name>out</name>
            </pin>
          </output_pins>
          <runners/>
          <init_priority>0</init_priority>
          <deactivated>false</deactivated>
          <binding_servers/>
          <binding_clients/>
        </filter>
        <filter>
          <name>BirdsEye</name>
          <class_id>demo_qt_video_display.ui_filter.adtf.cid</class_id>
          <input_pins>
            <pin>
              <name>video</name>
            </pin>
          </input_pins>
          <output_pins/>
          <runners/>
          <init_priority>0</init_priority>
          <binding_servers/>
          <binding_clients/>
        </filter>
        <filter>
          <name>Fisheye_undistoreted</name>
          <class_id>demo_qt_video_display.ui_filter.adtf.cid</class_id>
          <input_pins>
            <pin>
              <name>video</name>
            </pin>
          </input_pins>
          <output_pins/>
          <runners/>
          <init_priority>0</init_priority>
          <binding_servers/>
          <binding_clients/>
        </filter>
        <filter>
          <name>Object Detection Filter YOLO</name>
          <class_id>object_detection_filter_yolos.filter.user.aadc.cid</class_id>
          <input_pins>
            <pin>
              <name>in</name>
            </pin>
          </input_pins>
          <output_pins>
            <pin>
              <name>out</name>
            </pin>
          </output_pins>
          <runners>
            <runner>
              <name>trigger</name>
            </runner>
          </runners>
          <init_priority>0</init_priority>
          <deactivated>true</deactivated>
          <binding_servers/>
          <binding_clients/>
        </filter>
        <filter>
          <name>CamTweak Lane Detection</name>
          <class_id>lane_detection.filter.user.aadc.cid</class_id>
          <input_pins>
            <pin>
              <name>SteeringIn</name>
            </pin>
            <pin>
              <name>in</name>
            </pin>
            <pin>
              <name>EgoState_in</name>
            </pin>
          </input_pins>
          <output_pins>
            <pin>
              <name>LaneCenterSplit</name>
            </pin>
            <pin>
              <name>debug_out</name>
            </pin>
            <pin>
              <name>out</name>
            </pin>
          </output_pins>
          <runners/>
          <init_priority>0</init_priority>
          <binding_servers/>
          <binding_clients/>
        </filter>
        <filter>
          <name>LaneDetectionVideo</name>
          <class_id>demo_qt_video_display.ui_filter.adtf.cid</class_id>
          <input_pins>
            <pin>
              <name>video</name>
            </pin>
          </input_pins>
          <output_pins/>
          <runners/>
          <init_priority>0</init_priority>
          <binding_servers/>
          <binding_clients/>
        </filter>
        <filter>
          <name>LaneDetection Debug</name>
          <class_id>demo_qt_video_display.ui_filter.adtf.cid</class_id>
          <input_pins>
            <pin>
              <name>video</name>
            </pin>
          </input_pins>
          <output_pins/>
          <runners/>
          <init_priority>0</init_priority>
          <binding_servers/>
          <binding_clients/>
        </filter>
        <filter>
          <name>CamTweak EnvironmentalModel</name>
          <class_id>environmental_model.filter.user.aadc.cid</class_id>
          <input_pins>
            <pin>
              <name>RelativeLanePositioning</name>
            </pin>
            <pin>
              <name>laserScanner</name>
            </pin>
            <pin>
              <name>TotalDistance</name>
            </pin>
          </input_pins>
          <output_pins>
            <pin>
              <name>egoStateStruct</name>
            </pin>
            <pin>
              <name>openDriveMapAnalyzerInstanceSynchronization</name>
            </pin>
          </output_pins>
          <runners/>
          <init_priority>0</init_priority>
          <binding_servers/>
          <binding_clients/>
        </filter>
      </filters>
      <subgraphs>
        <subgraph>
          <name>camtweak_sensor_sanitization</name>
          <graph>sensor_sanitization</graph>
          <init_priority>0</init_priority>
        </subgraph>
      </subgraphs>
      <input_data_ports/>
      <output_data_ports/>
      <input_interface_ports/>
      <output_interface_ports/>
      <output_runner_ports/>
      <input_runner_ports/>
      <streaming_in_ports>
        <streaming_in_port>
          <name>basler_rgb</name>
          <portname>basler_rgb</portname>
        </streaming_in_port>
      </streaming_in_ports>
      <streaming_out_ports/>
      <sample_streams>
        <sample_stream>
          <name>stream_undistorted</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>Sample Stream</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>Sample Stream_1</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>Sample Stream_2</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>Sample Stream_3</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>Sample Stream_4</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>Sample Stream_7</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>Sample Stream_8</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
      </sample_streams>
      <active_runners>
        <active_runner>
          <name>Timer Runner</name>
          <class_id>default_timer_runner.streaming.adtf.cid</class_id>
        </active_runner>
      </active_runners>
      <binding_proxys/>
      <connections>
        <connection>
          <name>basler_rgb._Fisheye Undistortion.input</name>
          <source_connector_path>
            <connector/>
            <component>basler_rgb</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>input</connector>
            <component>Fisheye Undistortion</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Fisheye Undistortion.output_Sample Stream.</name>
          <source_connector_path>
            <connector>output</connector>
            <component>Fisheye Undistortion</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>stream_undistorted</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Sample Stream._Birds Eye Transform.in</name>
          <source_connector_path>
            <connector/>
            <component>stream_undistorted</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>in</connector>
            <component>Birds Eye Transform</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <deactivated>false</deactivated>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Sample Stream._Demo Qt Video Display.video</name>
          <source_connector_path>
            <connector/>
            <component>Sample Stream</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>video</connector>
            <component>BirdsEye</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>stream_undistorted._Demo Qt Video Display_1.video</name>
          <source_connector_path>
            <connector/>
            <component>stream_undistorted</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>video</connector>
            <component>Fisheye_undistoreted</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Timer Runner._Object Detection Filter YOLO.trigger</name>
          <source_connector_path>
            <connector/>
            <component>Timer Runner</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>trigger</connector>
            <component>Object Detection Filter YOLO</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <deactivated>true</deactivated>
          <sync>true</sync>
        </connection>
        <connection>
          <name>stream_undistorted._Object Detection Filter YOLO.in</name>
          <source_connector_path>
            <connector/>
            <component>stream_undistorted</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>in</connector>
            <component>Object Detection Filter YOLO</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <deactivated>true</deactivated>
          <sync>false</sync>
        </connection>
        <connection>
          <name>Birds Eye Transform.out_Sample Stream.</name>
          <source_connector_path>
            <connector>out</connector>
            <component>Birds Eye Transform</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>Sample Stream</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <deactivated>false</deactivated>
          <sync>true</sync>
        </connection>
        <connection>
          <name>CamTweak Lane Detection.LaneCenterSplit_Sample Stream_1.</name>
          <source_connector_path>
            <connector>LaneCenterSplit</connector>
            <component>CamTweak Lane Detection</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>Sample Stream_1</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Sample Stream._CamTweak Lane Detection.in</name>
          <source_connector_path>
            <connector/>
            <component>Sample Stream</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>in</connector>
            <component>CamTweak Lane Detection</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>CamTweak Lane Detection.debug_out_Sample Stream_2.</name>
          <source_connector_path>
            <connector>debug_out</connector>
            <component>CamTweak Lane Detection</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>Sample Stream_2</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Sample Stream_2._LaneDetection Debug.video</name>
          <source_connector_path>
            <connector/>
            <component>Sample Stream_2</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>video</connector>
            <component>LaneDetection Debug</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>CamTweak Lane Detection.out_Sample Stream_3.</name>
          <source_connector_path>
            <connector>out</connector>
            <component>CamTweak Lane Detection</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>Sample Stream_3</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Sample Stream_3._LaneDetectionVideo.video</name>
          <source_connector_path>
            <connector/>
            <component>Sample Stream_3</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>video</connector>
            <component>LaneDetectionVideo</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>CamTweak EnvironmentalModel.egoStateStruct_Sample Stream_4.</name>
          <source_connector_path>
            <connector>egoStateStruct</connector>
            <component>CamTweak EnvironmentalModel</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>Sample Stream_4</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Sample Stream_4._CamTweak Lane Detection.EgoState_in</name>
          <source_connector_path>
            <connector/>
            <component>Sample Stream_4</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>EgoState_in</connector>
            <component>CamTweak Lane Detection</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Sample Stream_1._CamTweak EnvironmentalModel.RelativeLanePositioning</name>
          <source_connector_path>
            <connector/>
            <component>Sample Stream_1</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>RelativeLanePositioning</connector>
            <component>CamTweak EnvironmentalModel</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>camtweak_sensor_sanitization.distance_overall_Sample Stream_8.</name>
          <source_connector_path>
            <connector>distance_overall</connector>
            <component>camtweak_sensor_sanitization</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>Sample Stream_8</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Sample Stream_8._CamTweak EnvironmentalModel.TotalDistance</name>
          <source_connector_path>
            <connector/>
            <component>Sample Stream_8</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>TotalDistance</connector>
            <component>CamTweak EnvironmentalModel</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>camtweak_sensor_sanitization.sanitized_laser_scanner_Sample Stream_7.</name>
          <source_connector_path>
            <connector>sanitized_laser_scanner</connector>
            <component>camtweak_sensor_sanitization</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>Sample Stream_7</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Sample Stream_7._CamTweak EnvironmentalModel.laserScanner</name>
          <source_connector_path>
            <connector/>
            <component>Sample Stream_7</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>laserScanner</connector>
            <component>CamTweak EnvironmentalModel</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Sample Stream_1._CamTweak Lane Detection.SteeringIn</name>
          <source_connector_path>
            <connector/>
            <component>Sample Stream_1</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>SteeringIn</connector>
            <component>CamTweak Lane Detection</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
      </connections>
      <streaming_interface_in_ports/>
      <streaming_interface_out_ports/>
    </graph>
  </graphs>
  <streaming_graphs>
    <streaming_graph>
      <name>default_streaming_graph</name>
      <streaming_sources>
        <streaming_source>
          <name>Arduino EgoMotion Sensor</name>
          <class_id>arduino_egomotion_sensor.streaming_source.base.aadc.cid</class_id>
          <input_pins/>
          <output_pins>
            <pin>
              <name>iner_meas_unit</name>
            </pin>
            <pin>
              <name>wheel_left</name>
            </pin>
            <pin>
              <name>wheel_right</name>
            </pin>
          </output_pins>
          <runners/>
          <init_priority>0</init_priority>
          <deactivated>false</deactivated>
          <binding_servers/>
          <binding_clients/>
        </streaming_source>
        <streaming_source>
          <name>Arduino Ultrasonic Sensor</name>
          <class_id>arduino_us_sensor.streaming_source.base.aadc.cid</class_id>
          <input_pins/>
          <output_pins>
            <pin>
              <name>ultrasonic_struct</name>
            </pin>
            <pin>
              <name>rear_center</name>
            </pin>
          </output_pins>
          <runners/>
          <init_priority>0</init_priority>
          <deactivated>false</deactivated>
          <binding_servers/>
          <binding_clients/>
        </streaming_source>
        <streaming_source>
          <name>Arduino Battery Sensor</name>
          <class_id>arduino_battery_sensor.streaming_source.base.aadc.cid</class_id>
          <input_pins/>
          <output_pins>
            <pin>
              <name>voltage_struct</name>
            </pin>
          </output_pins>
          <runners/>
          <init_priority>0</init_priority>
          <deactivated>false</deactivated>
          <binding_servers/>
          <binding_clients/>
        </streaming_source>
        <streaming_source>
          <name>Basler Camera</name>
          <class_id>basler_camera.streaming_source.demo.aadc.cid</class_id>
          <input_pins/>
          <output_pins>
            <pin>
              <name>video_rgb</name>
            </pin>
          </output_pins>
          <runners/>
          <init_priority>0</init_priority>
          <deactivated>false</deactivated>
          <binding_servers/>
          <binding_clients/>
        </streaming_source>
        <streaming_source>
          <name>Universal Camera</name>
          <class_id>universal_camera.streaming_source.demo.aadc.cid</class_id>
          <input_pins/>
          <output_pins>
            <pin>
              <name>output</name>
            </pin>
          </output_pins>
          <runners/>
          <init_priority>0</init_priority>
          <deactivated>true</deactivated>
          <binding_servers/>
          <binding_clients/>
        </streaming_source>
        <streaming_source>
          <name>Laser Scanner</name>
          <class_id>laser_scanner.streaming_source.demo.aadc.cid</class_id>
          <input_pins/>
          <output_pins>
            <pin>
              <name>output</name>
            </pin>
          </output_pins>
          <runners/>
          <init_priority>0</init_priority>
          <binding_servers/>
          <binding_clients/>
        </streaming_source>
        <streaming_source>
          <name>Jury Communication TCP Receiver</name>
          <class_id>jury_communication_tcp.streaming_source.base.aadc.cid</class_id>
          <input_pins/>
          <output_pins>
            <pin>
              <name>jury_struct</name>
            </pin>
            <pin>
              <name>maneuver_list</name>
            </pin>
            <pin>
              <name>open_drive_map</name>
            </pin>
            <pin>
              <name>road_sign_map</name>
            </pin>
          </output_pins>
          <runners/>
          <init_priority>0</init_priority>
          <binding_servers>
            <pin>
              <name>socket</name>
            </pin>
          </binding_servers>
          <binding_clients/>
        </streaming_source>
      </streaming_sources>
      <streaming_dock_in_ports>
        <sample_stream>
          <name>basler_rgb</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>ultrasonic_struct</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>iner_meas_unit</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>wheel_left</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>wheel_right</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>voltage_struct</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>laser_scanner</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>rear_cam</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>jury_struct</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>maneuver_list</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>od_map</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>ts_map</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
      </streaming_dock_in_ports>
      <streaming_dock_out_ports>
        <sample_stream>
          <name>steering_out</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>speed_out</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>head_light</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>turn_signal_left</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>turn_signal_right</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>brake_light</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>hazard_light</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>reverse_light</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>vehicle_speed</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>driver_struct</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
      </streaming_dock_out_ports>
      <streaming_sinks>
        <streaming_sink>
          <name>Arduino Actuator</name>
          <class_id>arduino_actuator.streaming_sink.base.aadc.cid</class_id>
          <input_pins>
            <pin>
              <name>steering</name>
            </pin>
            <pin>
              <name>speed</name>
            </pin>
            <pin>
              <name>head_light</name>
            </pin>
            <pin>
              <name>turn_signal_left</name>
            </pin>
            <pin>
              <name>turn_signal_right</name>
            </pin>
            <pin>
              <name>hazard_light</name>
            </pin>
            <pin>
              <name>reverse_light</name>
            </pin>
            <pin>
              <name>brake_light</name>
            </pin>
          </input_pins>
          <output_pins/>
          <runners/>
          <init_priority>0</init_priority>
          <deactivated>false</deactivated>
          <binding_servers/>
          <binding_clients/>
        </streaming_sink>
        <streaming_sink>
          <name>ADTFDAT File Recorder</name>
          <class_id>adtfdat_file_recorder.streaming_sink.adtf.cid</class_id>
          <input_pins>
            <pin>
              <name>rear_cam</name>
            </pin>
            <pin>
              <name>laser_scanner</name>
            </pin>
            <pin>
              <name>wheel_right</name>
            </pin>
            <pin>
              <name>wheel_left</name>
            </pin>
            <pin>
              <name>iner_meas_unit</name>
            </pin>
            <pin>
              <name>uss_struct</name>
            </pin>
            <pin>
              <name>front_cam</name>
            </pin>
            <pin>
              <name>voltage_struct</name>
            </pin>
            <pin>
              <name>tcp_rsmap</name>
            </pin>
            <pin>
              <name>odmap</name>
            </pin>
            <pin>
              <name>maneuverlist</name>
            </pin>
            <pin>
              <name>jurstruct</name>
            </pin>
          </input_pins>
          <output_pins/>
          <runners/>
          <init_priority>0</init_priority>
          <binding_servers/>
          <binding_clients/>
        </streaming_sink>
        <streaming_sink>
          <name>Jury Communication TCP Sender</name>
          <class_id>jury_communication_tcp.streaming_sink.base.aadc.cid</class_id>
          <input_pins>
            <pin>
              <name>driver_struct</name>
            </pin>
          </input_pins>
          <output_pins/>
          <runners/>
          <init_priority>0</init_priority>
          <binding_servers/>
          <binding_clients>
            <pin>
              <name>socket</name>
            </pin>
          </binding_clients>
        </streaming_sink>
      </streaming_sinks>
      <sample_streams>
        <sample_stream>
          <name>stream_basler_rgb</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>stream_ultrasonic_struct</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>stream_wheel_left</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>stream_wheel_right</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>stream_iner_meas_unit</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>stream_voltage_struct</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>stream_laserscanner</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>stream_rear_cam</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>stream_in_tcp_jurystruct</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>stream_in_tcp_maneuverlist</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>stream_in_tcp_odmap</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>stream_in_tcp_rsmap</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
      </sample_streams>
      <connections>
        <connection>
          <name>Sample Stream._Filter Graph Dock.basler_rgb</name>
          <source_connector_path>
            <connector/>
            <component>stream_basler_rgb</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>basler_rgb</connector>
            <component>Filter Graph Dock</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Arduino Ultrasonic Sensor.ultrasonic_struct_Sample Stream_1.</name>
          <source_connector_path>
            <connector>ultrasonic_struct</connector>
            <component>Arduino Ultrasonic Sensor</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>stream_ultrasonic_struct</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <deactivated>false</deactivated>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Sample Stream_1._Filter Graph Dock.ultrasonic_struct</name>
          <source_connector_path>
            <connector/>
            <component>stream_ultrasonic_struct</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>ultrasonic_struct</connector>
            <component>Filter Graph Dock</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Arduino EgoMotion Sensor.iner_meas_unit_Sample Stream_4.</name>
          <source_connector_path>
            <connector>iner_meas_unit</connector>
            <component>Arduino EgoMotion Sensor</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>stream_iner_meas_unit</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <deactivated>false</deactivated>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Arduino EgoMotion Sensor.wheel_left_Sample Stream_2.</name>
          <source_connector_path>
            <connector>wheel_left</connector>
            <component>Arduino EgoMotion Sensor</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>stream_wheel_left</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <deactivated>false</deactivated>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Sample Stream_3._Filter Graph Dock.wheel_right</name>
          <source_connector_path>
            <connector/>
            <component>stream_wheel_right</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>wheel_right</connector>
            <component>Filter Graph Dock</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Sample Stream_4._Filter Graph Dock.iner_meas_unit</name>
          <source_connector_path>
            <connector/>
            <component>stream_iner_meas_unit</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>iner_meas_unit</connector>
            <component>Filter Graph Dock</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Sample Stream_2._Filter Graph Dock.wheel_left</name>
          <source_connector_path>
            <connector/>
            <component>stream_wheel_left</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>wheel_left</connector>
            <component>Filter Graph Dock</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Filter Graph Dock.speed_out_Arduino Actuator.speed</name>
          <source_connector_path>
            <connector>speed_out</connector>
            <component>Filter Graph Dock</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>speed</connector>
            <component>Arduino Actuator</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <deactivated>false</deactivated>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Filter Graph Dock.steering_out_Arduino Actuator.steering</name>
          <source_connector_path>
            <connector>steering_out</connector>
            <component>Filter Graph Dock</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>steering</connector>
            <component>Arduino Actuator</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <deactivated>false</deactivated>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Filter Graph Dock.turn_signal_left_Arduino Actuator.turn_signal_left</name>
          <source_connector_path>
            <connector>turn_signal_left</connector>
            <component>Filter Graph Dock</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>turn_signal_left</connector>
            <component>Arduino Actuator</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <deactivated>false</deactivated>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Filter Graph Dock.turn_signal_right_Arduino Actuator.turn_signal_right</name>
          <source_connector_path>
            <connector>turn_signal_right</connector>
            <component>Filter Graph Dock</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>turn_signal_right</connector>
            <component>Arduino Actuator</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <deactivated>false</deactivated>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Filter Graph Dock.hazard_light_Arduino Actuator.hazard_light</name>
          <source_connector_path>
            <connector>hazard_light</connector>
            <component>Filter Graph Dock</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>hazard_light</connector>
            <component>Arduino Actuator</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <deactivated>false</deactivated>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Filter Graph Dock.reverse_light_Arduino Actuator.reverse_light</name>
          <source_connector_path>
            <connector>reverse_light</connector>
            <component>Filter Graph Dock</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>reverse_light</connector>
            <component>Arduino Actuator</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <deactivated>false</deactivated>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Arduino Battery Sensor.voltage_struct_Sample Stream_5.</name>
          <source_connector_path>
            <connector>voltage_struct</connector>
            <component>Arduino Battery Sensor</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>stream_voltage_struct</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <deactivated>false</deactivated>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Sample Stream_5._Filter Graph Dock.voltage_struct</name>
          <source_connector_path>
            <connector/>
            <component>stream_voltage_struct</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>voltage_struct</connector>
            <component>Filter Graph Dock</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Sample Stream_6._Filter Graph Dock.laser_scanner</name>
          <source_connector_path>
            <connector/>
            <component>stream_laserscanner</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>laser_scanner</connector>
            <component>Filter Graph Dock</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Arduino EgoMotion Sensor.wheel_right_Sample Stream_3.</name>
          <source_connector_path>
            <connector>wheel_right</connector>
            <component>Arduino EgoMotion Sensor</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>stream_wheel_right</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <deactivated>false</deactivated>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Universal Camera.output_Sample Stream_7.</name>
          <source_connector_path>
            <connector>output</connector>
            <component>Universal Camera</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>stream_rear_cam</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <deactivated>true</deactivated>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Sample Stream_7._Filter Graph Dock.rear_cam</name>
          <source_connector_path>
            <connector/>
            <component>stream_rear_cam</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>rear_cam</connector>
            <component>Filter Graph Dock</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Filter Graph Dock.brake_light_Arduino Actuator.brake_light</name>
          <source_connector_path>
            <connector>brake_light</connector>
            <component>Filter Graph Dock</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>brake_light</connector>
            <component>Arduino Actuator</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <deactivated>false</deactivated>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Filter Graph Dock.head_light_Arduino Actuator.head_light</name>
          <source_connector_path>
            <connector>head_light</connector>
            <component>Filter Graph Dock</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>head_light</connector>
            <component>Arduino Actuator</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <deactivated>false</deactivated>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Laser Scanner.output_Sample Stream_6.</name>
          <source_connector_path>
            <connector>output</connector>
            <component>Laser Scanner</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>stream_laserscanner</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Basler Camera.video_rgb_stream_basler_rgb.</name>
          <source_connector_path>
            <connector>video_rgb</connector>
            <component>Basler Camera</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>stream_basler_rgb</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>stream_rear_cam._ADTFDAT File Recorder.rear_cam</name>
          <source_connector_path>
            <connector/>
            <component>stream_rear_cam</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>rear_cam</connector>
            <component>ADTFDAT File Recorder</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>stream_laserscanner._ADTFDAT File Recorder.laser_scanner</name>
          <source_connector_path>
            <connector/>
            <component>stream_laserscanner</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>laser_scanner</connector>
            <component>ADTFDAT File Recorder</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>stream_wheel_right._ADTFDAT File Recorder.wheel_right</name>
          <source_connector_path>
            <connector/>
            <component>stream_wheel_right</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>wheel_right</connector>
            <component>ADTFDAT File Recorder</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>stream_wheel_left._ADTFDAT File Recorder.wheel_left</name>
          <source_connector_path>
            <connector/>
            <component>stream_wheel_left</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>wheel_left</connector>
            <component>ADTFDAT File Recorder</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>stream_iner_meas_unit._ADTFDAT File Recorder.iner_meas_unit</name>
          <source_connector_path>
            <connector/>
            <component>stream_iner_meas_unit</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>iner_meas_unit</connector>
            <component>ADTFDAT File Recorder</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>stream_ultrasonic_struct._ADTFDAT File Recorder.uss_struct</name>
          <source_connector_path>
            <connector/>
            <component>stream_ultrasonic_struct</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>uss_struct</connector>
            <component>ADTFDAT File Recorder</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>stream_basler_rgb._ADTFDAT File Recorder.front_cam</name>
          <source_connector_path>
            <connector/>
            <component>stream_basler_rgb</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>front_cam</connector>
            <component>ADTFDAT File Recorder</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>stream_voltage_struct._ADTFDAT File Recorder.voltage_struct</name>
          <source_connector_path>
            <connector/>
            <component>stream_voltage_struct</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>voltage_struct</connector>
            <component>ADTFDAT File Recorder</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Filter Graph Dock.stream_out_driverstruct_Jury Communication TCP Sender.driver_struct</name>
          <source_connector_path>
            <connector>driver_struct</connector>
            <component>Filter Graph Dock</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>driver_struct</connector>
            <component>Jury Communication TCP Sender</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Jury Communication TCP Receiver.jury_struct_stream_in_tcp_jurystruct.</name>
          <source_connector_path>
            <connector>jury_struct</connector>
            <component>Jury Communication TCP Receiver</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>stream_in_tcp_jurystruct</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Jury Communication TCP Receiver.maneuver_list_stream_in_tcp_maneuverlist.</name>
          <source_connector_path>
            <connector>maneuver_list</connector>
            <component>Jury Communication TCP Receiver</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>stream_in_tcp_maneuverlist</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Jury Communication TCP Receiver.open_drive_map_stream_in_tcp_odmap.</name>
          <source_connector_path>
            <connector>open_drive_map</connector>
            <component>Jury Communication TCP Receiver</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>stream_in_tcp_odmap</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Jury Communication TCP Receiver.road_sign_map_stream_in_tcp_rsmap.</name>
          <source_connector_path>
            <connector>road_sign_map</connector>
            <component>Jury Communication TCP Receiver</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>stream_in_tcp_rsmap</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Jury Communication TCP Receiver.socket_Binding Proxy.</name>
          <source_connector_path>
            <connector>socket</connector>
            <component>Jury Communication TCP Receiver</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>Binding Proxy</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Binding Proxy._Jury Communication TCP Sender.socket</name>
          <source_connector_path>
            <connector/>
            <component>Binding Proxy</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>socket</connector>
            <component>Jury Communication TCP Sender</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>stream_in_tcp_jurystruct._Filter Graph Dock.jury_struct</name>
          <source_connector_path>
            <connector/>
            <component>stream_in_tcp_jurystruct</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>jury_struct</connector>
            <component>Filter Graph Dock</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>stream_in_tcp_rsmap._Filter Graph Dock.ts_map</name>
          <source_connector_path>
            <connector/>
            <component>stream_in_tcp_rsmap</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>ts_map</connector>
            <component>Filter Graph Dock</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>stream_in_tcp_odmap._Filter Graph Dock.od_map</name>
          <source_connector_path>
            <connector/>
            <component>stream_in_tcp_odmap</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>od_map</connector>
            <component>Filter Graph Dock</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>stream_in_tcp_maneuverlist._Filter Graph Dock.maneuver_list</name>
          <source_connector_path>
            <connector/>
            <component>stream_in_tcp_maneuverlist</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>maneuver_list</connector>
            <component>Filter Graph Dock</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>stream_in_tcp_rsmap._ADTFDAT File Recorder.tcp_rsmap</name>
          <source_connector_path>
            <connector/>
            <component>stream_in_tcp_rsmap</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>tcp_rsmap</connector>
            <component>ADTFDAT File Recorder</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>stream_in_tcp_odmap._ADTFDAT File Recorder.odmap</name>
          <source_connector_path>
            <connector/>
            <component>stream_in_tcp_odmap</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>odmap</connector>
            <component>ADTFDAT File Recorder</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>stream_in_tcp_maneuverlist._ADTFDAT File Recorder.maneuverlist</name>
          <source_connector_path>
            <connector/>
            <component>stream_in_tcp_maneuverlist</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>maneuverlist</connector>
            <component>ADTFDAT File Recorder</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>stream_in_tcp_jurystruct._ADTFDAT File Recorder.jurstruct</name>
          <source_connector_path>
            <connector/>
            <component>stream_in_tcp_jurystruct</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>jurstruct</connector>
            <component>ADTFDAT File Recorder</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
      </connections>
      <binding_proxys>
        <binding_proxy>
          <name>Binding Proxy</name>
          <class_id>default_binding_proxy.streaming.adtf.cid</class_id>
        </binding_proxy>
      </binding_proxys>
      <streaming_dock_interface_in_ports/>
      <streaming_dock_interface_out_ports/>
      <streaming_dock_runner_in_ports/>
    </streaming_graph>
    <streaming_graph>
      <name>playback_graph</name>
      <streaming_sources>
        <streaming_source>
          <name>ADTFDAT File Player</name>
          <class_id>adtfdat_file_player.streaming_source.adtf.cid</class_id>
          <input_pins/>
          <output_pins>
            <pin>
              <name>laser_scanner</name>
            </pin>
            <pin>
              <name>wheel_right</name>
            </pin>
            <pin>
              <name>wheel_left</name>
            </pin>
            <pin>
              <name>iner_meas_unit</name>
            </pin>
            <pin>
              <name>voltage_struct</name>
            </pin>
            <pin>
              <name>rear_cam</name>
            </pin>
            <pin>
              <name>uss_struct</name>
            </pin>
            <pin>
              <name>front_cam</name>
            </pin>
            <pin>
              <name>tcp_rsmap</name>
            </pin>
            <pin>
              <name>odmap</name>
            </pin>
            <pin>
              <name>maneuverlist</name>
            </pin>
            <pin>
              <name>jurstruct</name>
            </pin>
          </output_pins>
          <runners/>
          <init_priority>0</init_priority>
          <binding_servers/>
          <binding_clients/>
        </streaming_source>
      </streaming_sources>
      <streaming_dock_in_ports>
        <sample_stream>
          <name>ultrasonic_struct</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>iner_meas_unit</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>wheel_left</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>wheel_right</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>voltage_struct</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>basler_rgb</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>rear_cam</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>laser_scanner</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>jury_struct</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>maneuver_list</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>od_map</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>ts_map</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
      </streaming_dock_in_ports>
      <streaming_dock_out_ports/>
      <streaming_sinks/>
      <sample_streams/>
      <connections>
        <connection>
          <name>ADTFDAT File Player.voltage_struct_Filter Graph Dock.voltage_struct</name>
          <source_connector_path>
            <connector>voltage_struct</connector>
            <component>ADTFDAT File Player</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>voltage_struct</connector>
            <component>Filter Graph Dock</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>ADTFDAT File Player.iner_meas_unit_Filter Graph Dock.iner_meas_unit</name>
          <source_connector_path>
            <connector>iner_meas_unit</connector>
            <component>ADTFDAT File Player</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>iner_meas_unit</connector>
            <component>Filter Graph Dock</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>ADTFDAT File Player.wheel_left_Filter Graph Dock.wheel_left</name>
          <source_connector_path>
            <connector>wheel_left</connector>
            <component>ADTFDAT File Player</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>wheel_left</connector>
            <component>Filter Graph Dock</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>ADTFDAT File Player.wheel_right_Filter Graph Dock.wheel_right</name>
          <source_connector_path>
            <connector>wheel_right</connector>
            <component>ADTFDAT File Player</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>wheel_right</connector>
            <component>Filter Graph Dock</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>ADTFDAT File Player.laser_scanner_Filter Graph Dock.laser_scanner</name>
          <source_connector_path>
            <connector>laser_scanner</connector>
            <component>ADTFDAT File Player</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>laser_scanner</connector>
            <component>Filter Graph Dock</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>ADTFDAT File Player.front_cam_Filter Graph Dock.basler_rgb</name>
          <source_connector_path>
            <connector>front_cam</connector>
            <component>ADTFDAT File Player</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>basler_rgb</connector>
            <component>Filter Graph Dock</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>ADTFDAT File Player.jurstruct_Filter Graph Dock.jury_struct</name>
          <source_connector_path>
            <connector>jurstruct</connector>
            <component>ADTFDAT File Player</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>jury_struct</connector>
            <component>Filter Graph Dock</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>ADTFDAT File Player.maneuverlist_Filter Graph Dock.maneuverlist</name>
          <source_connector_path>
            <connector>maneuverlist</connector>
            <component>ADTFDAT File Player</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>maneuver_list</connector>
            <component>Filter Graph Dock</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>ADTFDAT File Player.odmap_Filter Graph Dock.odmap</name>
          <source_connector_path>
            <connector>odmap</connector>
            <component>ADTFDAT File Player</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>od_map</connector>
            <component>Filter Graph Dock</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>ADTFDAT File Player.tcp_rsmap_Filter Graph Dock.ts_map</name>
          <source_connector_path>
            <connector>tcp_rsmap</connector>
            <component>ADTFDAT File Player</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>ts_map</connector>
            <component>Filter Graph Dock</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
      </connections>
      <binding_proxys/>
      <streaming_dock_interface_in_ports/>
      <streaming_dock_interface_out_ports/>
      <streaming_dock_runner_in_ports/>
    </streaming_graph>
    <streaming_graph>
      <name>devel_streaming_graph</name>
      <streaming_sources>
        <streaming_source>
          <name>Jury Communication TCP Receiver</name>
          <class_id>jury_communication_tcp.streaming_source.base.aadc.cid</class_id>
          <input_pins/>
          <output_pins>
            <pin>
              <name>jury_struct</name>
            </pin>
            <pin>
              <name>maneuver_list</name>
            </pin>
            <pin>
              <name>open_drive_map</name>
            </pin>
            <pin>
              <name>road_sign_map</name>
            </pin>
          </output_pins>
          <runners/>
          <init_priority>0</init_priority>
          <binding_servers>
            <pin>
              <name>socket</name>
            </pin>
          </binding_servers>
          <binding_clients/>
        </streaming_source>
      </streaming_sources>
      <streaming_dock_in_ports>
        <sample_stream>
          <name>jury_struct</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>maneuver_list</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>od_map</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>ts_map</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
      </streaming_dock_in_ports>
      <streaming_dock_out_ports>
        <sample_stream>
          <name>driver_struct</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
      </streaming_dock_out_ports>
      <streaming_sinks>
        <streaming_sink>
          <name>Jury Communication TCP Sender</name>
          <class_id>jury_communication_tcp.streaming_sink.base.aadc.cid</class_id>
          <input_pins>
            <pin>
              <name>driver_struct</name>
            </pin>
          </input_pins>
          <output_pins/>
          <runners/>
          <init_priority>0</init_priority>
          <binding_servers/>
          <binding_clients>
            <pin>
              <name>socket</name>
            </pin>
          </binding_clients>
        </streaming_sink>
      </streaming_sinks>
      <sample_streams/>
      <connections>
        <connection>
          <name>Jury Communication TCP Receiver.socket_Binding Proxy.</name>
          <source_connector_path>
            <connector>socket</connector>
            <component>Jury Communication TCP Receiver</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>Binding Proxy</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Binding Proxy._Jury Communication TCP Sender.socket</name>
          <source_connector_path>
            <connector/>
            <component>Binding Proxy</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>socket</connector>
            <component>Jury Communication TCP Sender</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Jury Communication TCP Receiver.jury_struct_Filter Graph Dock.jury_struct</name>
          <source_connector_path>
            <connector>jury_struct</connector>
            <component>Jury Communication TCP Receiver</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>jury_struct</connector>
            <component>Filter Graph Dock</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Filter Graph Dock.driver_struct_Jury Communication TCP Sender.driver_struct</name>
          <source_connector_path>
            <connector>driver_struct</connector>
            <component>Filter Graph Dock</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>driver_struct</connector>
            <component>Jury Communication TCP Sender</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Jury Communication TCP Receiver.maneuver_list_Filter Graph Dock.maneuver_list</name>
          <source_connector_path>
            <connector>maneuver_list</connector>
            <component>Jury Communication TCP Receiver</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>maneuver_list</connector>
            <component>Filter Graph Dock</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Jury Communication TCP Receiver.open_drive_map_Filter Graph Dock.od_map</name>
          <source_connector_path>
            <connector>open_drive_map</connector>
            <component>Jury Communication TCP Receiver</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>od_map</connector>
            <component>Filter Graph Dock</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Jury Communication TCP Receiver.road_sign_map_Filter Graph Dock.ts_map</name>
          <source_connector_path>
            <connector>road_sign_map</connector>
            <component>Jury Communication TCP Receiver</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>ts_map</connector>
            <component>Filter Graph Dock</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
      </connections>
      <binding_proxys>
        <binding_proxy>
          <name>Binding Proxy</name>
          <class_id>default_binding_proxy.streaming.adtf.cid</class_id>
        </binding_proxy>
      </binding_proxys>
      <streaming_dock_interface_in_ports/>
      <streaming_dock_interface_out_ports/>
      <streaming_dock_runner_in_ports/>
    </streaming_graph>
    <streaming_graph>
      <name>recording_graph</name>
      <streaming_sources>
        <streaming_source>
          <name>Arduino Ultrasonic Sensor</name>
          <class_id>arduino_us_sensor.streaming_source.base.aadc.cid</class_id>
          <input_pins/>
          <output_pins>
            <pin>
              <name>ultrasonic_struct</name>
            </pin>
          </output_pins>
          <runners/>
          <init_priority>0</init_priority>
          <binding_servers/>
          <binding_clients/>
        </streaming_source>
        <streaming_source>
          <name>Arduino EgoMotion Sensor</name>
          <class_id>arduino_egomotion_sensor.streaming_source.base.aadc.cid</class_id>
          <input_pins/>
          <output_pins>
            <pin>
              <name>iner_meas_unit</name>
            </pin>
            <pin>
              <name>wheel_left</name>
            </pin>
            <pin>
              <name>wheel_right</name>
            </pin>
          </output_pins>
          <runners/>
          <init_priority>0</init_priority>
          <binding_servers/>
          <binding_clients/>
        </streaming_source>
        <streaming_source>
          <name>Arduino Battery Sensor</name>
          <class_id>arduino_battery_sensor.streaming_source.base.aadc.cid</class_id>
          <input_pins/>
          <output_pins>
            <pin>
              <name>voltage_struct</name>
            </pin>
          </output_pins>
          <runners/>
          <init_priority>0</init_priority>
          <binding_servers/>
          <binding_clients/>
        </streaming_source>
        <streaming_source>
          <name>Basler Camera</name>
          <class_id>basler_camera.streaming_source.demo.aadc.cid</class_id>
          <input_pins/>
          <output_pins>
            <pin>
              <name>video_rgb</name>
            </pin>
          </output_pins>
          <runners/>
          <init_priority>0</init_priority>
          <binding_servers/>
          <binding_clients/>
        </streaming_source>
        <streaming_source>
          <name>Rear Camera</name>
          <class_id>universal_camera.streaming_source.demo.aadc.cid</class_id>
          <input_pins/>
          <output_pins>
            <pin>
              <name>output</name>
            </pin>
          </output_pins>
          <runners/>
          <init_priority>0</init_priority>
          <binding_servers/>
          <binding_clients/>
        </streaming_source>
        <streaming_source>
          <name>Laser Scanner</name>
          <class_id>laser_scanner.streaming_source.demo.aadc.cid</class_id>
          <input_pins/>
          <output_pins>
            <pin>
              <name>output</name>
            </pin>
          </output_pins>
          <runners/>
          <init_priority>0</init_priority>
          <binding_servers/>
          <binding_clients/>
        </streaming_source>
      </streaming_sources>
      <streaming_dock_in_ports/>
      <streaming_dock_out_ports/>
      <streaming_sinks>
        <streaming_sink>
          <name>ADTFDAT File Recorder</name>
          <class_id>adtfdat_file_recorder.streaming_sink.adtf.cid</class_id>
          <input_pins>
            <pin>
              <name>ultrasonic_struct</name>
            </pin>
            <pin>
              <name>iner_meas_unit</name>
            </pin>
            <pin>
              <name>wheel_left</name>
            </pin>
            <pin>
              <name>wheel_right</name>
            </pin>
            <pin>
              <name>voltage_struct</name>
            </pin>
            <pin>
              <name>basler_video</name>
            </pin>
            <pin>
              <name>rear_video</name>
            </pin>
            <pin>
              <name>laser_scanner</name>
            </pin>
          </input_pins>
          <output_pins/>
          <runners/>
          <init_priority>0</init_priority>
          <binding_servers/>
          <binding_clients/>
        </streaming_sink>
      </streaming_sinks>
      <sample_streams>
        <sample_stream>
          <name>stream_ultrasonic_struct</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>stream_imu</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>stream_wheel_left</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>stream_wheel_right</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>stream_voltage_struct</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>stream_basler_video</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>stream_rear_video</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>stream_laser_scanner</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
      </sample_streams>
      <connections>
        <connection>
          <name>Arduino Ultrasonic Sensor.ultrasonic_struct_sample_ultrasonic_struct.</name>
          <source_connector_path>
            <connector>ultrasonic_struct</connector>
            <component>Arduino Ultrasonic Sensor</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>stream_ultrasonic_struct</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>sample_ultrasonic_struct._ADTFDAT File Recorder.ultrasonic_struct</name>
          <source_connector_path>
            <connector/>
            <component>stream_ultrasonic_struct</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>ultrasonic_struct</connector>
            <component>ADTFDAT File Recorder</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Arduino EgoMotion Sensor.iner_meas_unit_stream_imu.</name>
          <source_connector_path>
            <connector>iner_meas_unit</connector>
            <component>Arduino EgoMotion Sensor</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>stream_imu</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>stream_imu._ADTFDAT File Recorder.iner_meas_unit</name>
          <source_connector_path>
            <connector/>
            <component>stream_imu</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>iner_meas_unit</connector>
            <component>ADTFDAT File Recorder</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Arduino EgoMotion Sensor.wheel_left_stream_wheel_left.</name>
          <source_connector_path>
            <connector>wheel_left</connector>
            <component>Arduino EgoMotion Sensor</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>stream_wheel_left</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>stream_wheel_left._ADTFDAT File Recorder.wheel_left</name>
          <source_connector_path>
            <connector/>
            <component>stream_wheel_left</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>wheel_left</connector>
            <component>ADTFDAT File Recorder</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Arduino EgoMotion Sensor.wheel_right_stream_wheel_right.</name>
          <source_connector_path>
            <connector>wheel_right</connector>
            <component>Arduino EgoMotion Sensor</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>stream_wheel_right</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>stream_wheel_right._ADTFDAT File Recorder.wheel_right</name>
          <source_connector_path>
            <connector/>
            <component>stream_wheel_right</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>wheel_right</connector>
            <component>ADTFDAT File Recorder</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Arduino Battery Sensor.voltage_struct_stream_voltage_struct.</name>
          <source_connector_path>
            <connector>voltage_struct</connector>
            <component>Arduino Battery Sensor</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>stream_voltage_struct</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>stream_voltage_struct._ADTFDAT File Recorder.voltage_struct</name>
          <source_connector_path>
            <connector/>
            <component>stream_voltage_struct</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>voltage_struct</connector>
            <component>ADTFDAT File Recorder</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Basler Camera.video_rgb_stream_basler_video.</name>
          <source_connector_path>
            <connector>video_rgb</connector>
            <component>Basler Camera</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>stream_basler_video</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>stream_basler_video._ADTFDAT File Recorder.basler_video</name>
          <source_connector_path>
            <connector/>
            <component>stream_basler_video</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>basler_video</connector>
            <component>ADTFDAT File Recorder</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Rear Camera.output_stream_rear_video.</name>
          <source_connector_path>
            <connector>output</connector>
            <component>Rear Camera</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>stream_rear_video</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>stream_rear_video._ADTFDAT File Recorder.rear_video</name>
          <source_connector_path>
            <connector/>
            <component>stream_rear_video</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>rear_video</connector>
            <component>ADTFDAT File Recorder</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Laser Scanner.output_stream_laser_scanner.</name>
          <source_connector_path>
            <connector>output</connector>
            <component>Laser Scanner</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>stream_laser_scanner</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
        <connection>
          <name>stream_laser_scanner._ADTFDAT File Recorder.laser_scanner</name>
          <source_connector_path>
            <connector/>
            <component>stream_laser_scanner</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>laser_scanner</connector>
            <component>ADTFDAT File Recorder</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
      </connections>
      <binding_proxys/>
      <streaming_dock_interface_in_ports/>
      <streaming_dock_interface_out_ports/>
      <streaming_dock_runner_in_ports/>
    </streaming_graph>
    <streaming_graph>
      <name>camera_calib_graph</name>
      <streaming_sources>
        <streaming_source>
          <name>Basler Camera</name>
          <class_id>basler_camera.streaming_source.demo.aadc.cid</class_id>
          <input_pins/>
          <output_pins>
            <pin>
              <name>video_rgb</name>
            </pin>
          </output_pins>
          <runners/>
          <init_priority>0</init_priority>
          <deactivated>true</deactivated>
          <binding_servers/>
          <binding_clients/>
        </streaming_source>
        <streaming_source>
          <name>ADTFDAT File Player</name>
          <class_id>adtfdat_file_player.streaming_source.adtf.cid</class_id>
          <input_pins/>
          <output_pins>
            <pin>
              <name>rear_cam</name>
            </pin>
            <pin>
              <name>laser_scanner</name>
            </pin>
            <pin>
              <name>wheel_right</name>
            </pin>
            <pin>
              <name>wheel_left</name>
            </pin>
            <pin>
              <name>iner_meas_unit</name>
            </pin>
            <pin>
              <name>uss_struct</name>
            </pin>
            <pin>
              <name>front_cam</name>
            </pin>
            <pin>
              <name>voltage_struct</name>
            </pin>
            <pin>
              <name>tcp_rsmap</name>
            </pin>
            <pin>
              <name>odmap</name>
            </pin>
            <pin>
              <name>maneuverlist</name>
            </pin>
            <pin>
              <name>jurstruct</name>
            </pin>
          </output_pins>
          <runners/>
          <init_priority>0</init_priority>
          <deactivated>false</deactivated>
          <binding_servers/>
          <binding_clients/>
        </streaming_source>
      </streaming_sources>
      <streaming_dock_in_ports>
        <sample_stream>
          <name>basler_rgb</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
        <sample_stream>
          <name>laser_scanner</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
        </sample_stream>
      </streaming_dock_in_ports>
      <streaming_dock_out_ports/>
      <streaming_sinks>
        <streaming_sink>
          <name>ADTFDAT File Recorder</name>
          <class_id>adtfdat_file_recorder.streaming_sink.adtf.cid</class_id>
          <input_pins>
            <pin>
              <name>basler_rgb</name>
            </pin>
          </input_pins>
          <output_pins/>
          <runners/>
          <init_priority>0</init_priority>
          <deactivated>true</deactivated>
          <binding_servers/>
          <binding_clients/>
        </streaming_sink>
      </streaming_sinks>
      <sample_streams>
        <sample_stream>
          <name>Sample Stream</name>
          <class_id>default_sample_stream.streaming.adtf.cid</class_id>
          <deactivated>false</deactivated>
        </sample_stream>
      </sample_streams>
      <connections>
        <connection>
          <name>Basler Camera.video_rgb_Sample Stream.</name>
          <source_connector_path>
            <connector>video_rgb</connector>
            <component>Basler Camera</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector/>
            <component>Sample Stream</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <deactivated>true</deactivated>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Sample Stream._Filter Graph Dock.basler_rgb</name>
          <source_connector_path>
            <connector/>
            <component>Sample Stream</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>basler_rgb</connector>
            <component>Filter Graph Dock</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <deactivated>false</deactivated>
          <sync>true</sync>
        </connection>
        <connection>
          <name>Sample Stream._ADTFDAT File Recorder.basler_rgb</name>
          <source_connector_path>
            <connector/>
            <component>Sample Stream</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>basler_rgb</connector>
            <component>ADTFDAT File Recorder</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <deactivated>true</deactivated>
          <sync>true</sync>
        </connection>
        <connection>
          <name>ADTFDAT File Player.front_cam_Filter Graph Dock.basler_rgb</name>
          <source_connector_path>
            <connector>front_cam</connector>
            <component>ADTFDAT File Player</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>basler_rgb</connector>
            <component>Filter Graph Dock</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <deactivated>false</deactivated>
          <sync>true</sync>
        </connection>
        <connection>
          <name>ADTFDAT File Player.laser_scanner_Filter Graph Dock.laser_scanner</name>
          <source_connector_path>
            <connector>laser_scanner</connector>
            <component>ADTFDAT File Player</component>
            <portbindingobject/>
          </source_connector_path>
          <destination_connector_path>
            <connector>laser_scanner</connector>
            <component>Filter Graph Dock</component>
            <portbindingobject/>
          </destination_connector_path>
          <priority>0</priority>
          <sync>true</sync>
        </connection>
      </connections>
      <binding_proxys/>
      <streaming_dock_interface_in_ports/>
      <streaming_dock_interface_out_ports/>
      <streaming_dock_runner_in_ports/>
    </streaming_graph>
  </streaming_graphs>
</graph_file>
